/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_react-animated-numbers_dist_index_js"],{

/***/ "(app-pages-browser)/./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/memoize */ \"(app-pages-browser)/./node_modules/@emotion/memoize/dist/memoize.browser.esm.js\");\n\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar index = (0,_emotion_memoize__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9pcy1wcm9wLXZhbGlkL2Rpc3QvaXMtcHJvcC12YWxpZC5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1Qzs7QUFFdkMsbTdIQUFtN0g7O0FBRW43SCxZQUFZLDREQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsS0FBSyxFQUFDIiwic291cmNlcyI6WyJGOlxcUGVyc29uYWwgV29ya1xcMjAyNVxcQXJ0aWMgOVxcTmV4dCBKcyBXZWJzaXRlXFxCZXN0ZWNoIHdlYnNpdGVcXFdlYnNpdGVcXGxpdmVcXG5vZGVfbW9kdWxlc1xcQGVtb3Rpb25cXGlzLXByb3AtdmFsaWRcXGRpc3RcXGlzLXByb3AtdmFsaWQuYnJvd3Nlci5lc20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1lbW9pemUgZnJvbSAnQGVtb3Rpb24vbWVtb2l6ZSc7XG5cbnZhciByZWFjdFByb3BzUmVnZXggPSAvXigoY2hpbGRyZW58ZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUx8a2V5fHJlZnxhdXRvRm9jdXN8ZGVmYXVsdFZhbHVlfGRlZmF1bHRDaGVja2VkfGlubmVySFRNTHxzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmd8c3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nfHZhbHVlTGlua3xhY2NlcHR8YWNjZXB0Q2hhcnNldHxhY2Nlc3NLZXl8YWN0aW9ufGFsbG93fGFsbG93VXNlck1lZGlhfGFsbG93UGF5bWVudFJlcXVlc3R8YWxsb3dGdWxsU2NyZWVufGFsbG93VHJhbnNwYXJlbmN5fGFsdHxhc3luY3xhdXRvQ29tcGxldGV8YXV0b1BsYXl8Y2FwdHVyZXxjZWxsUGFkZGluZ3xjZWxsU3BhY2luZ3xjaGFsbGVuZ2V8Y2hhclNldHxjaGVja2VkfGNpdGV8Y2xhc3NJRHxjbGFzc05hbWV8Y29sc3xjb2xTcGFufGNvbnRlbnR8Y29udGVudEVkaXRhYmxlfGNvbnRleHRNZW51fGNvbnRyb2xzfGNvbnRyb2xzTGlzdHxjb29yZHN8Y3Jvc3NPcmlnaW58ZGF0YXxkYXRlVGltZXxkZWNvZGluZ3xkZWZhdWx0fGRlZmVyfGRpcnxkaXNhYmxlZHxkaXNhYmxlUGljdHVyZUluUGljdHVyZXxkb3dubG9hZHxkcmFnZ2FibGV8ZW5jVHlwZXxmb3JtfGZvcm1BY3Rpb258Zm9ybUVuY1R5cGV8Zm9ybU1ldGhvZHxmb3JtTm9WYWxpZGF0ZXxmb3JtVGFyZ2V0fGZyYW1lQm9yZGVyfGhlYWRlcnN8aGVpZ2h0fGhpZGRlbnxoaWdofGhyZWZ8aHJlZkxhbmd8aHRtbEZvcnxodHRwRXF1aXZ8aWR8aW5wdXRNb2RlfGludGVncml0eXxpc3xrZXlQYXJhbXN8a2V5VHlwZXxraW5kfGxhYmVsfGxhbmd8bGlzdHxsb2FkaW5nfGxvb3B8bG93fG1hcmdpbkhlaWdodHxtYXJnaW5XaWR0aHxtYXh8bWF4TGVuZ3RofG1lZGlhfG1lZGlhR3JvdXB8bWV0aG9kfG1pbnxtaW5MZW5ndGh8bXVsdGlwbGV8bXV0ZWR8bmFtZXxub25jZXxub1ZhbGlkYXRlfG9wZW58b3B0aW11bXxwYXR0ZXJufHBsYWNlaG9sZGVyfHBsYXlzSW5saW5lfHBvc3RlcnxwcmVsb2FkfHByb2ZpbGV8cmFkaW9Hcm91cHxyZWFkT25seXxyZWZlcnJlclBvbGljeXxyZWx8cmVxdWlyZWR8cmV2ZXJzZWR8cm9sZXxyb3dzfHJvd1NwYW58c2FuZGJveHxzY29wZXxzY29wZWR8c2Nyb2xsaW5nfHNlYW1sZXNzfHNlbGVjdGVkfHNoYXBlfHNpemV8c2l6ZXN8c2xvdHxzcGFufHNwZWxsQ2hlY2t8c3JjfHNyY0RvY3xzcmNMYW5nfHNyY1NldHxzdGFydHxzdGVwfHN0eWxlfHN1bW1hcnl8dGFiSW5kZXh8dGFyZ2V0fHRpdGxlfHR5cGV8dXNlTWFwfHZhbHVlfHdpZHRofHdtb2RlfHdyYXB8YWJvdXR8ZGF0YXR5cGV8aW5saXN0fHByZWZpeHxwcm9wZXJ0eXxyZXNvdXJjZXx0eXBlb2Z8dm9jYWJ8YXV0b0NhcGl0YWxpemV8YXV0b0NvcnJlY3R8YXV0b1NhdmV8Y29sb3J8aW5lcnR8aXRlbVByb3B8aXRlbVNjb3BlfGl0ZW1UeXBlfGl0ZW1JRHxpdGVtUmVmfG9ufHJlc3VsdHN8c2VjdXJpdHl8dW5zZWxlY3RhYmxlfGFjY2VudEhlaWdodHxhY2N1bXVsYXRlfGFkZGl0aXZlfGFsaWdubWVudEJhc2VsaW5lfGFsbG93UmVvcmRlcnxhbHBoYWJldGljfGFtcGxpdHVkZXxhcmFiaWNGb3JtfGFzY2VudHxhdHRyaWJ1dGVOYW1lfGF0dHJpYnV0ZVR5cGV8YXV0b1JldmVyc2V8YXppbXV0aHxiYXNlRnJlcXVlbmN5fGJhc2VsaW5lU2hpZnR8YmFzZVByb2ZpbGV8YmJveHxiZWdpbnxiaWFzfGJ5fGNhbGNNb2RlfGNhcEhlaWdodHxjbGlwfGNsaXBQYXRoVW5pdHN8Y2xpcFBhdGh8Y2xpcFJ1bGV8Y29sb3JJbnRlcnBvbGF0aW9ufGNvbG9ySW50ZXJwb2xhdGlvbkZpbHRlcnN8Y29sb3JQcm9maWxlfGNvbG9yUmVuZGVyaW5nfGNvbnRlbnRTY3JpcHRUeXBlfGNvbnRlbnRTdHlsZVR5cGV8Y3Vyc29yfGN4fGN5fGR8ZGVjZWxlcmF0ZXxkZXNjZW50fGRpZmZ1c2VDb25zdGFudHxkaXJlY3Rpb258ZGlzcGxheXxkaXZpc29yfGRvbWluYW50QmFzZWxpbmV8ZHVyfGR4fGR5fGVkZ2VNb2RlfGVsZXZhdGlvbnxlbmFibGVCYWNrZ3JvdW5kfGVuZHxleHBvbmVudHxleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkfGZpbGx8ZmlsbE9wYWNpdHl8ZmlsbFJ1bGV8ZmlsdGVyfGZpbHRlclJlc3xmaWx0ZXJVbml0c3xmbG9vZENvbG9yfGZsb29kT3BhY2l0eXxmb2N1c2FibGV8Zm9udEZhbWlseXxmb250U2l6ZXxmb250U2l6ZUFkanVzdHxmb250U3RyZXRjaHxmb250U3R5bGV8Zm9udFZhcmlhbnR8Zm9udFdlaWdodHxmb3JtYXR8ZnJvbXxmcnxmeHxmeXxnMXxnMnxnbHlwaE5hbWV8Z2x5cGhPcmllbnRhdGlvbkhvcml6b250YWx8Z2x5cGhPcmllbnRhdGlvblZlcnRpY2FsfGdseXBoUmVmfGdyYWRpZW50VHJhbnNmb3JtfGdyYWRpZW50VW5pdHN8aGFuZ2luZ3xob3JpekFkdlh8aG9yaXpPcmlnaW5YfGlkZW9ncmFwaGljfGltYWdlUmVuZGVyaW5nfGlufGluMnxpbnRlcmNlcHR8a3xrMXxrMnxrM3xrNHxrZXJuZWxNYXRyaXh8a2VybmVsVW5pdExlbmd0aHxrZXJuaW5nfGtleVBvaW50c3xrZXlTcGxpbmVzfGtleVRpbWVzfGxlbmd0aEFkanVzdHxsZXR0ZXJTcGFjaW5nfGxpZ2h0aW5nQ29sb3J8bGltaXRpbmdDb25lQW5nbGV8bG9jYWx8bWFya2VyRW5kfG1hcmtlck1pZHxtYXJrZXJTdGFydHxtYXJrZXJIZWlnaHR8bWFya2VyVW5pdHN8bWFya2VyV2lkdGh8bWFza3xtYXNrQ29udGVudFVuaXRzfG1hc2tVbml0c3xtYXRoZW1hdGljYWx8bW9kZXxudW1PY3RhdmVzfG9mZnNldHxvcGFjaXR5fG9wZXJhdG9yfG9yZGVyfG9yaWVudHxvcmllbnRhdGlvbnxvcmlnaW58b3ZlcmZsb3d8b3ZlcmxpbmVQb3NpdGlvbnxvdmVybGluZVRoaWNrbmVzc3xwYW5vc2UxfHBhaW50T3JkZXJ8cGF0aExlbmd0aHxwYXR0ZXJuQ29udGVudFVuaXRzfHBhdHRlcm5UcmFuc2Zvcm18cGF0dGVyblVuaXRzfHBvaW50ZXJFdmVudHN8cG9pbnRzfHBvaW50c0F0WHxwb2ludHNBdFl8cG9pbnRzQXRafHByZXNlcnZlQWxwaGF8cHJlc2VydmVBc3BlY3RSYXRpb3xwcmltaXRpdmVVbml0c3xyfHJhZGl1c3xyZWZYfHJlZll8cmVuZGVyaW5nSW50ZW50fHJlcGVhdENvdW50fHJlcGVhdER1cnxyZXF1aXJlZEV4dGVuc2lvbnN8cmVxdWlyZWRGZWF0dXJlc3xyZXN0YXJ0fHJlc3VsdHxyb3RhdGV8cnh8cnl8c2NhbGV8c2VlZHxzaGFwZVJlbmRlcmluZ3xzbG9wZXxzcGFjaW5nfHNwZWN1bGFyQ29uc3RhbnR8c3BlY3VsYXJFeHBvbmVudHxzcGVlZHxzcHJlYWRNZXRob2R8c3RhcnRPZmZzZXR8c3RkRGV2aWF0aW9ufHN0ZW1ofHN0ZW12fHN0aXRjaFRpbGVzfHN0b3BDb2xvcnxzdG9wT3BhY2l0eXxzdHJpa2V0aHJvdWdoUG9zaXRpb258c3RyaWtldGhyb3VnaFRoaWNrbmVzc3xzdHJpbmd8c3Ryb2tlfHN0cm9rZURhc2hhcnJheXxzdHJva2VEYXNob2Zmc2V0fHN0cm9rZUxpbmVjYXB8c3Ryb2tlTGluZWpvaW58c3Ryb2tlTWl0ZXJsaW1pdHxzdHJva2VPcGFjaXR5fHN0cm9rZVdpZHRofHN1cmZhY2VTY2FsZXxzeXN0ZW1MYW5ndWFnZXx0YWJsZVZhbHVlc3x0YXJnZXRYfHRhcmdldFl8dGV4dEFuY2hvcnx0ZXh0RGVjb3JhdGlvbnx0ZXh0UmVuZGVyaW5nfHRleHRMZW5ndGh8dG98dHJhbnNmb3JtfHUxfHUyfHVuZGVybGluZVBvc2l0aW9ufHVuZGVybGluZVRoaWNrbmVzc3x1bmljb2RlfHVuaWNvZGVCaWRpfHVuaWNvZGVSYW5nZXx1bml0c1BlckVtfHZBbHBoYWJldGljfHZIYW5naW5nfHZJZGVvZ3JhcGhpY3x2TWF0aGVtYXRpY2FsfHZhbHVlc3x2ZWN0b3JFZmZlY3R8dmVyc2lvbnx2ZXJ0QWR2WXx2ZXJ0T3JpZ2luWHx2ZXJ0T3JpZ2luWXx2aWV3Qm94fHZpZXdUYXJnZXR8dmlzaWJpbGl0eXx3aWR0aHN8d29yZFNwYWNpbmd8d3JpdGluZ01vZGV8eHx4SGVpZ2h0fHgxfHgyfHhDaGFubmVsU2VsZWN0b3J8eGxpbmtBY3R1YXRlfHhsaW5rQXJjcm9sZXx4bGlua0hyZWZ8eGxpbmtSb2xlfHhsaW5rU2hvd3x4bGlua1RpdGxlfHhsaW5rVHlwZXx4bWxCYXNlfHhtbG5zfHhtbG5zWGxpbmt8eG1sTGFuZ3x4bWxTcGFjZXx5fHkxfHkyfHlDaGFubmVsU2VsZWN0b3J8enx6b29tQW5kUGFufGZvcnxjbGFzc3xhdXRvZm9jdXMpfCgoW0RkXVtBYV1bVHRdW0FhXXxbQWFdW1JyXVtJaV1bQWFdfHgpLS4qKSkkLzsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YmZlZTY4YTRjZDdlNjAwOWVmNjFkMjNcblxudmFyIGluZGV4ID0gbWVtb2l6ZShmdW5jdGlvbiAocHJvcCkge1xuICByZXR1cm4gcmVhY3RQcm9wc1JlZ2V4LnRlc3QocHJvcCkgfHwgcHJvcC5jaGFyQ29kZUF0KDApID09PSAxMTFcbiAgLyogbyAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMSkgPT09IDExMFxuICAvKiBuICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgyKSA8IDkxO1xufVxuLyogWisxICovXG4pO1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@emotion/memoize/dist/memoize.browser.esm.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (memoize);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9tZW1vaXplL2Rpc3QvbWVtb2l6ZS5icm93c2VyLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsT0FBTyxFQUFDIiwic291cmNlcyI6WyJGOlxcUGVyc29uYWwgV29ya1xcMjAyNVxcQXJ0aWMgOVxcTmV4dCBKcyBXZWJzaXRlXFxCZXN0ZWNoIHdlYnNpdGVcXFdlYnNpdGVcXGxpdmVcXG5vZGVfbW9kdWxlc1xcQGVtb3Rpb25cXG1lbW9pemVcXGRpc3RcXG1lbW9pemUuYnJvd3Nlci5lc20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbWVtb2l6ZShmbikge1xuICB2YXIgY2FjaGUgPSB7fTtcbiAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICBpZiAoY2FjaGVbYXJnXSA9PT0gdW5kZWZpbmVkKSBjYWNoZVthcmddID0gZm4oYXJnKTtcbiAgICByZXR1cm4gY2FjaGVbYXJnXTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWVtb2l6ZTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@emotion/memoize/dist/memoize.browser.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-animated-numbers/dist/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-animated-numbers/dist/index.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("!function(t,e){if(true)module.exports=e(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));else { var s, n; }}(self,(function(t){return(()=>{\"use strict\";var e={297:e=>{e.exports=t}},n={};function s(t){var i=n[t];if(void 0!==i)return i.exports;var o=n[t]={exports:{}};return e[t](o,o.exports,s),o.exports}s.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return s.d(e,{a:e}),e},s.d=(t,e)=>{for(var n in e)s.o(e,n)&&!s.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),s.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var i={};return(()=>{s.r(i),s.d(i,{default:()=>jo});var t=s(297),e=s.n(t);const n=t=>t;let o=n,r=n;const a={some:0,all:1};const l=t=>/^\\-?\\d*\\.?\\d+$/.test(t),u=t=>/^0[^.\\s]+$/.test(t),c=t=>Array.isArray(t);function h(t,e){-1===t.indexOf(e)&&t.push(e)}function d(t,e){const n=t.indexOf(e);n>-1&&t.splice(n,1)}class m{constructor(){this.subscriptions=[]}add(t){return h(this.subscriptions,t),()=>d(this.subscriptions,t)}notify(t,e,n){const s=this.subscriptions.length;if(s)if(1===s)this.subscriptions[0](t,e,n);else for(let i=0;i<s;i++){const s=this.subscriptions[i];s&&s(t,e,n)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}function p(t,e){return e?t*(1e3/e):0}class f{constructor(){this.order=[],this.scheduled=new Set}add(t){if(!this.scheduled.has(t))return this.scheduled.add(t),this.order.push(t),!0}remove(t){const e=this.order.indexOf(t);-1!==e&&(this.order.splice(e,1),this.scheduled.delete(t))}clear(){this.order.length=0,this.scheduled.clear()}}const g=[\"prepare\",\"read\",\"update\",\"preRender\",\"render\",\"postRender\"],{schedule:y,cancel:v,state:x,steps:P}=function(t,e){let n=!1,s=!0;const i={delta:0,timestamp:0,isProcessing:!1},o=g.reduce(((t,e)=>(t[e]=function(t){let e=new f,n=new f,s=0,i=!1,o=!1;const r=new WeakSet,a={schedule:(t,o=!1,a=!1)=>{const l=a&&i,u=l?e:n;return o&&r.add(t),u.add(t)&&l&&i&&(s=e.order.length),t},cancel:t=>{n.remove(t),r.delete(t)},process:l=>{if(i)o=!0;else{if(i=!0,[e,n]=[n,e],n.clear(),s=e.order.length,s)for(let n=0;n<s;n++){const s=e.order[n];s(l),r.has(s)&&(a.schedule(s),t())}i=!1,o&&(o=!1,a.process(l))}}};return a}((()=>n=!0)),t)),{}),r=t=>o[t].process(i),a=()=>{const e=performance.now();n=!1,i.delta=s?1e3/60:Math.max(Math.min(e-i.timestamp,40),1),i.timestamp=e,i.isProcessing=!0,g.forEach(r),i.isProcessing=!1,n&&(s=!1,t(a))};return{schedule:g.reduce(((e,r)=>{const l=o[r];return e[r]=(e,o=!1,r=!1)=>(n||(n=!0,s=!0,i.isProcessing||t(a)),l.schedule(e,o,r)),e}),{}),cancel:t=>g.forEach((e=>o[e].cancel(t))),state:i,steps:o}}(\"undefined\"!=typeof requestAnimationFrame?requestAnimationFrame:n),b={current:void 0};class T{constructor(t,e={}){var n;this.version=\"10.16.5\",this.timeDelta=0,this.lastUpdated=0,this.canTrackVelocity=!1,this.events={},this.updateAndNotify=(t,e=!0)=>{this.prev=this.current,this.current=t;const{delta:n,timestamp:s}=x;this.lastUpdated!==s&&(this.timeDelta=n,this.lastUpdated=s,y.postRender(this.scheduleVelocityCheck)),this.prev!==this.current&&this.events.change&&this.events.change.notify(this.current),this.events.velocityChange&&this.events.velocityChange.notify(this.getVelocity()),e&&this.events.renderRequest&&this.events.renderRequest.notify(this.current)},this.scheduleVelocityCheck=()=>y.postRender(this.velocityCheck),this.velocityCheck=({timestamp:t})=>{t!==this.lastUpdated&&(this.prev=this.current,this.events.velocityChange&&this.events.velocityChange.notify(this.getVelocity()))},this.hasAnimated=!1,this.prev=this.current=t,this.canTrackVelocity=(n=this.current,!isNaN(parseFloat(n))),this.owner=e.owner}onChange(t){return this.on(\"change\",t)}on(t,e){this.events[t]||(this.events[t]=new m);const n=this.events[t].add(e);return\"change\"===t?()=>{n(),y.read((()=>{this.events.change.getSize()||this.stop()}))}:n}clearListeners(){for(const t in this.events)this.events[t].clear()}attach(t,e){this.passiveEffect=t,this.stopPassiveEffect=e}set(t,e=!0){e&&this.passiveEffect?this.passiveEffect(t,this.updateAndNotify):this.updateAndNotify(t,e)}setWithVelocity(t,e,n){this.set(e),this.prev=t,this.timeDelta=n}jump(t){this.updateAndNotify(t),this.prev=t,this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}get(){return b.current&&b.current.push(this),this.current}getPrevious(){return this.prev}getVelocity(){return this.canTrackVelocity?p(parseFloat(this.current)-parseFloat(this.prev),this.timeDelta):0}start(t){return this.stop(),new Promise((e=>{this.hasAnimated=!0,this.animation=t(e),this.events.animationStart&&this.events.animationStart.notify()})).then((()=>{this.events.animationComplete&&this.events.animationComplete.notify(),this.clearAnimation()}))}stop(){this.animation&&(this.animation.stop(),this.events.animationCancel&&this.events.animationCancel.notify()),this.clearAnimation()}isAnimating(){return!!this.animation}clearAnimation(){delete this.animation}destroy(){this.clearListeners(),this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}}function S(t,e){return new T(t,e)}const w=t=>e=>\"string\"==typeof e&&e.startsWith(t),E=w(\"--\"),A=w(\"var(--\"),V=t=>Math.round(1e5*t)/1e5,C=/(-)?([\\d]*\\.?[\\d])+/g,M=/(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi,D=/^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;function k(t){return\"string\"==typeof t}const R=(t,e,n)=>Math.min(Math.max(n,t),e),L={test:t=>\"number\"==typeof t,parse:parseFloat,transform:t=>t},j={...L,transform:t=>R(0,1,t)},B={...L,default:1},F=(t,e)=>n=>Boolean(k(n)&&D.test(n)&&n.startsWith(t)||e&&Object.prototype.hasOwnProperty.call(n,e)),O=(t,e,n)=>s=>{if(!k(s))return s;const[i,o,r,a]=s.match(C);return{[t]:parseFloat(i),[e]:parseFloat(o),[n]:parseFloat(r),alpha:void 0!==a?parseFloat(a):1}},I={...L,transform:t=>Math.round((t=>R(0,255,t))(t))},U={test:F(\"rgb\",\"red\"),parse:O(\"red\",\"green\",\"blue\"),transform:({red:t,green:e,blue:n,alpha:s=1})=>\"rgba(\"+I.transform(t)+\", \"+I.transform(e)+\", \"+I.transform(n)+\", \"+V(j.transform(s))+\")\"},N={test:F(\"#\"),parse:function(t){let e=\"\",n=\"\",s=\"\",i=\"\";return t.length>5?(e=t.substring(1,3),n=t.substring(3,5),s=t.substring(5,7),i=t.substring(7,9)):(e=t.substring(1,2),n=t.substring(2,3),s=t.substring(3,4),i=t.substring(4,5),e+=e,n+=n,s+=s,i+=i),{red:parseInt(e,16),green:parseInt(n,16),blue:parseInt(s,16),alpha:i?parseInt(i,16)/255:1}},transform:U.transform},$=t=>({test:e=>k(e)&&e.endsWith(t)&&1===e.split(\" \").length,parse:parseFloat,transform:e=>`${e}${t}`}),W=$(\"deg\"),H=$(\"%\"),z=$(\"px\"),Y=$(\"vh\"),X=$(\"vw\"),G={...H,parse:t=>H.parse(t)/100,transform:t=>H.transform(100*t)},q={test:F(\"hsl\",\"hue\"),parse:O(\"hue\",\"saturation\",\"lightness\"),transform:({hue:t,saturation:e,lightness:n,alpha:s=1})=>\"hsla(\"+Math.round(t)+\", \"+H.transform(V(e))+\", \"+H.transform(V(n))+\", \"+V(j.transform(s))+\")\"},Z={test:t=>U.test(t)||N.test(t)||q.test(t),parse:t=>U.test(t)?U.parse(t):q.test(t)?q.parse(t):N.parse(t),transform:t=>k(t)?t:t.hasOwnProperty(\"red\")?U.transform(t):q.transform(t)},K={regex:/var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g,countKey:\"Vars\",token:\"${v}\",parse:n},_={regex:M,countKey:\"Colors\",token:\"${c}\",parse:Z.parse},J={regex:C,countKey:\"Numbers\",token:\"${n}\",parse:L.parse};function Q(t,{regex:e,countKey:n,token:s,parse:i}){const o=t.tokenised.match(e);o&&(t[\"num\"+n]=o.length,t.tokenised=t.tokenised.replace(e,s),t.values.push(...o.map(i)))}function tt(t){const e=t.toString(),n={value:e,tokenised:e,values:[],numVars:0,numColors:0,numNumbers:0};return n.value.includes(\"var(--\")&&Q(n,K),Q(n,_),Q(n,J),n}function et(t){return tt(t).values}function nt(t){const{values:e,numColors:n,numVars:s,tokenised:i}=tt(t),o=e.length;return t=>{let e=i;for(let i=0;i<o;i++)e=i<s?e.replace(K.token,t[i]):i<s+n?e.replace(_.token,Z.transform(t[i])):e.replace(J.token,V(t[i]));return e}}const st=t=>\"number\"==typeof t?0:t,it={test:function(t){var e,n;return isNaN(t)&&k(t)&&((null===(e=t.match(C))||void 0===e?void 0:e.length)||0)+((null===(n=t.match(M))||void 0===n?void 0:n.length)||0)>0},parse:et,createTransformer:nt,getAnimatableNone:function(t){const e=et(t);return nt(t)(e.map(st))}},ot=new Set([\"brightness\",\"contrast\",\"saturate\",\"opacity\"]);function rt(t){const[e,n]=t.slice(0,-1).split(\"(\");if(\"drop-shadow\"===e)return t;const[s]=n.match(C)||[];if(!s)return t;const i=n.replace(s,\"\");let o=ot.has(e)?1:0;return s!==n&&(o*=100),e+\"(\"+o+i+\")\"}const at=/([a-z-]*)\\(.*?\\)/g,lt={...it,getAnimatableNone:t=>{const e=t.match(at);return e?e.map(rt).join(\" \"):t}},ut={...L,transform:Math.round},ct={borderWidth:z,borderTopWidth:z,borderRightWidth:z,borderBottomWidth:z,borderLeftWidth:z,borderRadius:z,radius:z,borderTopLeftRadius:z,borderTopRightRadius:z,borderBottomRightRadius:z,borderBottomLeftRadius:z,width:z,maxWidth:z,height:z,maxHeight:z,size:z,top:z,right:z,bottom:z,left:z,padding:z,paddingTop:z,paddingRight:z,paddingBottom:z,paddingLeft:z,margin:z,marginTop:z,marginRight:z,marginBottom:z,marginLeft:z,rotate:W,rotateX:W,rotateY:W,rotateZ:W,scale:B,scaleX:B,scaleY:B,scaleZ:B,skew:W,skewX:W,skewY:W,distance:z,translateX:z,translateY:z,translateZ:z,x:z,y:z,z,perspective:z,transformPerspective:z,opacity:j,originX:G,originY:G,originZ:z,zIndex:ut,fillOpacity:j,strokeOpacity:j,numOctaves:ut},ht={...ct,color:Z,backgroundColor:Z,outlineColor:Z,fill:Z,stroke:Z,borderColor:Z,borderTopColor:Z,borderRightColor:Z,borderBottomColor:Z,borderLeftColor:Z,filter:lt,WebkitFilter:lt},dt=t=>ht[t];function mt(t,e){let n=dt(t);return n!==lt&&(n=it),n.getAnimatableNone?n.getAnimatableNone(e):void 0}const pt=t=>e=>e.test(t),ft=[L,z,H,W,X,Y,{test:t=>\"auto\"===t,parse:t=>t}],gt=t=>ft.find(pt(t)),yt=[...ft,Z,it];function vt(t,e,n,s={},i={}){return\"function\"==typeof e&&(e=e(void 0!==n?n:t.custom,s,i)),\"string\"==typeof e&&(e=t.variants&&t.variants[e]),\"function\"==typeof e&&(e=e(void 0!==n?n:t.custom,s,i)),e}function xt(t,e,n){const s=t.getProps();return vt(s,e,void 0!==n?n:s.custom,function(t){const e={};return t.values.forEach(((t,n)=>e[n]=t.get())),e}(t),function(t){const e={};return t.values.forEach(((t,n)=>e[n]=t.getVelocity())),e}(t))}function Pt(t,e,n){t.hasValue(e)?t.getValue(e).set(n):t.addValue(e,S(n))}function bt(t,e){const n=xt(t,e);let{transitionEnd:s={},transition:i={},...o}=n?t.makeTargetAnimatable(n,!1):{};o={...o,...s};for(const e in o)Pt(t,e,(r=o[e],c(r)?r[r.length-1]||0:r));var r}function Tt(t,e){[...e].reverse().forEach((n=>{const s=t.getVariant(n);s&&bt(t,s),t.variantChildren&&t.variantChildren.forEach((t=>{Tt(t,e)}))}))}function St(t,e){if(e)return(e[t]||e.default||e).from}const wt=[\"transformPerspective\",\"x\",\"y\",\"z\",\"translateX\",\"translateY\",\"translateZ\",\"scale\",\"scaleX\",\"scaleY\",\"rotate\",\"rotateX\",\"rotateY\",\"rotateZ\",\"skew\",\"skewX\",\"skewY\"],Et=new Set(wt),At=t=>t.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase(),Vt=\"data-\"+At(\"framerAppearId\"),Ct=t=>1e3*t,Mt=t=>t/1e3,Dt=t=>Array.isArray(t)&&\"number\"==typeof t[0];function kt(t){return Boolean(!t||\"string\"==typeof t&&Lt[t]||Dt(t)||Array.isArray(t)&&t.every(kt))}const Rt=([t,e,n,s])=>`cubic-bezier(${t}, ${e}, ${n}, ${s})`,Lt={linear:\"linear\",ease:\"ease\",easeIn:\"ease-in\",easeOut:\"ease-out\",easeInOut:\"ease-in-out\",circIn:Rt([0,.65,.55,1]),circOut:Rt([.55,0,1,.45]),backIn:Rt([.31,.01,.66,-.59]),backOut:Rt([.33,1.53,.69,.99])};function jt(t){if(t)return Dt(t)?Rt(t):Array.isArray(t)?t.map(jt):Lt[t]}const Bt=(t,e,n)=>(((1-3*n+3*e)*t+(3*n-6*e))*t+3*e)*t;function Ft(t,e,s,i){if(t===e&&s===i)return n;return n=>0===n||1===n?n:Bt(function(t,e,n,s,i){let o,r,a=0;do{r=e+(n-e)/2,o=Bt(r,s,i)-t,o>0?n=r:e=r}while(Math.abs(o)>1e-7&&++a<12);return r}(n,0,1,t,s),e,i)}const Ot=Ft(.42,0,1,1),It=Ft(0,0,.58,1),Ut=Ft(.42,0,.58,1),Nt=t=>e=>e<=.5?t(2*e)/2:(2-t(2*(1-e)))/2,$t=t=>e=>1-t(1-e),Wt=t=>1-Math.sin(Math.acos(t)),Ht=$t(Wt),zt=Nt(Ht),Yt=Ft(.33,1.53,.69,.99),Xt=$t(Yt),Gt=Nt(Xt),qt={linear:n,easeIn:Ot,easeInOut:Ut,easeOut:It,circIn:Wt,circInOut:zt,circOut:Ht,backIn:Xt,backInOut:Gt,backOut:Yt,anticipate:t=>(t*=2)<1?.5*Xt(t):.5*(2-Math.pow(2,-10*(t-1)))},Zt=t=>{if(Array.isArray(t)){r(4===t.length,\"Cubic bezier arrays must contain four numerical values.\");const[e,n,s,i]=t;return Ft(e,n,s,i)}return\"string\"==typeof t?(r(void 0!==qt[t],`Invalid easing type '${t}'`),qt[t]):t},Kt=(t,e,n)=>-n*t+n*e+t;function _t(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+(e-t)*(2/3-n)*6:t}const Jt=(t,e,n)=>{const s=t*t;return Math.sqrt(Math.max(0,n*(e*e-s)+s))},Qt=[N,U,q];function te(t){const e=(n=t,Qt.find((t=>t.test(n))));var n;r(Boolean(e),`'${t}' is not an animatable color. Use the equivalent color code instead.`);let s=e.parse(t);return e===q&&(s=function({hue:t,saturation:e,lightness:n,alpha:s}){t/=360,n/=100;let i=0,o=0,r=0;if(e/=100){const s=n<.5?n*(1+e):n+e-n*e,a=2*n-s;i=_t(a,s,t+1/3),o=_t(a,s,t),r=_t(a,s,t-1/3)}else i=o=r=n;return{red:Math.round(255*i),green:Math.round(255*o),blue:Math.round(255*r),alpha:s}}(s)),s}const ee=(t,e)=>{const n=te(t),s=te(e),i={...n};return t=>(i.red=Jt(n.red,s.red,t),i.green=Jt(n.green,s.green,t),i.blue=Jt(n.blue,s.blue,t),i.alpha=Kt(n.alpha,s.alpha,t),U.transform(i))},ne=(t,e)=>n=>e(t(n)),se=(...t)=>t.reduce(ne),ie=(t,e)=>n=>`${n>0?e:t}`;function oe(t,e){return\"number\"==typeof t?n=>Kt(t,e,n):Z.test(t)?ee(t,e):t.startsWith(\"var(\")?ie(t,e):le(t,e)}const re=(t,e)=>{const n=[...t],s=n.length,i=t.map(((t,n)=>oe(t,e[n])));return t=>{for(let e=0;e<s;e++)n[e]=i[e](t);return n}},ae=(t,e)=>{const n={...t,...e},s={};for(const i in n)void 0!==t[i]&&void 0!==e[i]&&(s[i]=oe(t[i],e[i]));return t=>{for(const e in s)n[e]=s[e](t);return n}},le=(t,e)=>{const n=it.createTransformer(e),s=tt(t),i=tt(e);return s.numVars===i.numVars&&s.numColors===i.numColors&&s.numNumbers>=i.numNumbers?se(re(s.values,i.values),n):(o(!0,`Complex values '${t}' and '${e}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`),ie(t,e))},ue=(t,e,n)=>{const s=e-t;return 0===s?1:(n-t)/s},ce=(t,e)=>n=>Kt(t,e,n);function he(t,e,{clamp:s=!0,ease:i,mixer:o}={}){const a=t.length;if(r(a===e.length,\"Both input and output ranges must be the same length\"),1===a)return()=>e[0];t[0]>t[a-1]&&(t=[...t].reverse(),e=[...e].reverse());const l=function(t,e,s){const i=[],o=s||(\"number\"==typeof(r=t[0])?ce:\"string\"==typeof r?Z.test(r)?ee:le:Array.isArray(r)?re:\"object\"==typeof r?ae:ce);var r;const a=t.length-1;for(let s=0;s<a;s++){let r=o(t[s],t[s+1]);if(e){const t=Array.isArray(e)?e[s]||n:e;r=se(t,r)}i.push(r)}return i}(e,i,o),u=l.length,c=e=>{let n=0;if(u>1)for(;n<t.length-2&&!(e<t[n+1]);n++);const s=ue(t[n],t[n+1],e);return l[n](s)};return s?e=>c(R(t[0],t[a-1],e)):c}function de({duration:t=300,keyframes:e,times:n,ease:s=\"easeInOut\"}){const i=(t=>Array.isArray(t)&&\"number\"!=typeof t[0])(s)?s.map(Zt):Zt(s),o={done:!1,value:e[0]},r=he(function(t,e){return t.map((t=>t*e))}(n&&n.length===e.length?n:function(t){const e=[0];return function(t,e){const n=t[t.length-1];for(let s=1;s<=e;s++){const i=ue(0,e,s);t.push(Kt(n,1,i))}}(e,t.length-1),e}(e),t),e,{ease:Array.isArray(i)?i:(a=e,l=i,a.map((()=>l||Ut)).splice(0,a.length-1))});var a,l;return{calculatedDuration:t,next:e=>(o.value=r(e),o.done=e>=t,o)}}function me(t,e,n){const s=Math.max(e-5,0);return p(n-t(s),e-s)}function pe(t,e){return t*Math.sqrt(1-e*e)}const fe=[\"duration\",\"bounce\"],ge=[\"stiffness\",\"damping\",\"mass\"];function ye(t,e){return e.some((e=>void 0!==t[e]))}function ve({keyframes:t,restDelta:e,restSpeed:n,...s}){const i=t[0],r=t[t.length-1],a={done:!1,value:i},{stiffness:l,damping:u,mass:c,velocity:h,duration:d,isResolvedFromDuration:m}=function(t){let e={velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1,...t};if(!ye(t,ge)&&ye(t,fe)){const n=function({duration:t=800,bounce:e=.25,velocity:n=0,mass:s=1}){let i,r;o(t<=Ct(10),\"Spring duration must be 10 seconds or less\");let a=1-e;a=R(.05,1,a),t=R(.01,10,Mt(t)),a<1?(i=e=>{const s=e*a,i=s*t;return.001-(s-n)/pe(e,a)*Math.exp(-i)},r=e=>{const s=e*a*t,o=s*n+n,r=Math.pow(a,2)*Math.pow(e,2)*t,l=Math.exp(-s),u=pe(Math.pow(e,2),a);return(.001-i(e)>0?-1:1)*((o-r)*l)/u}):(i=e=>Math.exp(-e*t)*((e-n)*t+1)-.001,r=e=>Math.exp(-e*t)*(t*t*(n-e)));const l=function(t,e,n){let s=n;for(let n=1;n<12;n++)s-=t(s)/e(s);return s}(i,r,5/t);if(t=Ct(t),isNaN(l))return{stiffness:100,damping:10,duration:t};{const e=Math.pow(l,2)*s;return{stiffness:e,damping:2*a*Math.sqrt(s*e),duration:t}}}(t);e={...e,...n,velocity:0,mass:1},e.isResolvedFromDuration=!0}return e}(s),p=h?-Mt(h):0,f=u/(2*Math.sqrt(l*c)),g=r-i,y=Mt(Math.sqrt(l/c)),v=Math.abs(g)<5;let x;if(n||(n=v?.01:2),e||(e=v?.005:.5),f<1){const t=pe(y,f);x=e=>{const n=Math.exp(-f*y*e);return r-n*((p+f*y*g)/t*Math.sin(t*e)+g*Math.cos(t*e))}}else if(1===f)x=t=>r-Math.exp(-y*t)*(g+(p+y*g)*t);else{const t=y*Math.sqrt(f*f-1);x=e=>{const n=Math.exp(-f*y*e),s=Math.min(t*e,300);return r-n*((p+f*y*g)*Math.sinh(s)+t*g*Math.cosh(s))/t}}return{calculatedDuration:m&&d||null,next:t=>{const s=x(t);if(m)a.done=t>=d;else{let i=p;0!==t&&(i=f<1?me(x,t,s):0);const o=Math.abs(i)<=n,l=Math.abs(r-s)<=e;a.done=o&&l}return a.value=a.done?r:s,a}}}function xe({keyframes:t,velocity:e=0,power:n=.8,timeConstant:s=325,bounceDamping:i=10,bounceStiffness:o=500,modifyTarget:r,min:a,max:l,restDelta:u=.5,restSpeed:c}){const h=t[0],d={done:!1,value:h},m=t=>void 0===a?l:void 0===l||Math.abs(a-t)<Math.abs(l-t)?a:l;let p=n*e;const f=h+p,g=void 0===r?f:r(f);g!==f&&(p=g-h);const y=t=>-p*Math.exp(-t/s),v=t=>g+y(t),x=t=>{const e=y(t),n=v(t);d.done=Math.abs(e)<=u,d.value=d.done?g:n};let P,b;const T=t=>{var e;e=d.value,(void 0!==a&&e<a||void 0!==l&&e>l)&&(P=t,b=ve({keyframes:[d.value,m(d.value)],velocity:me(v,t,d.value),damping:i,stiffness:o,restDelta:u,restSpeed:c}))};return T(0),{calculatedDuration:null,next:t=>{let e=!1;return b||void 0!==P||(e=!0,x(t),T(t)),void 0!==P&&t>P?b.next(t-P):(!e&&x(t),d)}}}const Pe=t=>{const e=({timestamp:e})=>t(e);return{start:()=>y.update(e,!0),stop:()=>v(e),now:()=>x.isProcessing?x.timestamp:performance.now()}};function be(t){let e=0,n=t.next(e);for(;!n.done&&e<2e4;)e+=50,n=t.next(e);return e>=2e4?1/0:e}const Te={decay:xe,inertia:xe,tween:de,keyframes:de,spring:ve};function Se({autoplay:t=!0,delay:e=0,driver:n=Pe,keyframes:s,type:i=\"keyframes\",repeat:o=0,repeatDelay:r=0,repeatType:a=\"loop\",onPlay:l,onStop:u,onComplete:c,onUpdate:h,...d}){let m,p,f=1,g=!1;const y=()=>{p=new Promise((t=>{m=t}))};let v;y();const x=Te[i]||de;let P;x!==de&&\"number\"!=typeof s[0]&&(P=he([0,100],s,{clamp:!1}),s=[0,100]);const b=x({...d,keyframes:s});let T;\"mirror\"===a&&(T=x({...d,keyframes:[...s].reverse(),velocity:-(d.velocity||0)}));let S=\"idle\",w=null,E=null,A=null;null===b.calculatedDuration&&o&&(b.calculatedDuration=be(b));const{calculatedDuration:V}=b;let C=1/0,M=1/0;null!==V&&(C=V+r,M=C*(o+1)-r);let D=0;const k=t=>{if(null===E)return;f>0&&(E=Math.min(E,t)),f<0&&(E=Math.min(t-M/f,E)),D=null!==w?w:Math.round(t-E)*f;const n=D-e*(f>=0?1:-1),i=f>=0?n<0:n>M;D=Math.max(n,0),\"finished\"===S&&null===w&&(D=M);let l=D,u=b;if(o){const t=D/C;let e=Math.floor(t),n=t%1;!n&&t>=1&&(n=1),1===n&&e--,e=Math.min(e,o+1);const s=Boolean(e%2);s&&(\"reverse\"===a?(n=1-n,r&&(n-=r/C)):\"mirror\"===a&&(u=T));let i=R(0,1,n);D>M&&(i=\"reverse\"===a&&s?1:0),l=i*C}const c=i?{done:!1,value:s[0]}:u.next(l);P&&(c.value=P(c.value));let{done:d}=c;i||null===V||(d=f>=0?D>=M:D<=0);const m=null===w&&(\"finished\"===S||\"running\"===S&&d);return h&&h(c.value),m&&B(),c},L=()=>{v&&v.stop(),v=void 0},j=()=>{S=\"idle\",L(),m(),y(),E=A=null},B=()=>{S=\"finished\",c&&c(),L(),m()},F=()=>{if(g)return;v||(v=n(k));const t=v.now();l&&l(),null!==w?E=t-w:E&&\"finished\"!==S||(E=t),\"finished\"===S&&y(),A=E,w=null,S=\"running\",v.start()};t&&F();const O={then:(t,e)=>p.then(t,e),get time(){return Mt(D)},set time(t){t=Ct(t),D=t,null===w&&v&&0!==f?E=v.now()-t/f:w=t},get duration(){const t=null===b.calculatedDuration?be(b):b.calculatedDuration;return Mt(t)},get speed(){return f},set speed(t){t!==f&&v&&(f=t,O.time=Mt(D))},get state(){return S},play:F,pause:()=>{S=\"paused\",w=D},stop:()=>{g=!0,\"idle\"!==S&&(S=\"idle\",u&&u(),j())},cancel:()=>{null!==A&&k(A),j()},complete:()=>{S=\"finished\"},sample:t=>(E=0,k(t))};return O}const we=function(t){let e;return()=>(void 0===e&&(e=Object.hasOwnProperty.call(Element.prototype,\"animate\")),e)}(),Ee=new Set([\"opacity\",\"clipPath\",\"filter\",\"transform\",\"backgroundColor\"]);const Ae={type:\"spring\",stiffness:500,damping:25,restSpeed:10},Ve={type:\"keyframes\",duration:.8},Ce={type:\"keyframes\",ease:[.25,.1,.35,1],duration:.3},Me=(t,{keyframes:e})=>e.length>2?Ve:Et.has(t)?t.startsWith(\"scale\")?{type:\"spring\",stiffness:550,damping:0===e[1]?2*Math.sqrt(550):30,restSpeed:10}:Ae:Ce,De=(t,e)=>!(\"zIndex\"===t||\"number\"!=typeof e&&!Array.isArray(e)&&(\"string\"!=typeof e||!it.test(e)&&\"0\"!==e||e.startsWith(\"url(\")));function ke(t){return\"number\"==typeof t?0===t:null!==t?\"none\"===t||\"0\"===t||u(t):void 0}function Re(t,e){return t[e]||t.default||t}const Le=(t,e,s,i={})=>r=>{const a=Re(i,t)||{},l=a.delay||i.delay||0;let{elapsed:u=0}=i;u-=Ct(l);const c=function(t,e,n,s){const i=De(e,n);let o;o=Array.isArray(n)?[...n]:[null,n];const r=void 0!==s.from?s.from:t.get();let a;const l=[];for(let t=0;t<o.length;t++)null===o[t]&&(o[t]=0===t?r:o[t-1]),ke(o[t])&&l.push(t),\"string\"==typeof o[t]&&\"none\"!==o[t]&&\"0\"!==o[t]&&(a=o[t]);if(i&&l.length&&a)for(let t=0;t<l.length;t++)o[l[t]]=mt(e,a);return o}(e,t,s,a),h=c[0],d=c[c.length-1],m=De(t,h),p=De(t,d);o(m===p,`You are trying to animate ${t} from \"${h}\" to \"${d}\". ${h} is not an animatable value - to enable this animation set ${h} to a value animatable to ${d} via the \\`style\\` property.`);let f={keyframes:c,velocity:e.getVelocity(),ease:\"easeOut\",...a,delay:-u,onUpdate:t=>{e.set(t),a.onUpdate&&a.onUpdate(t)},onComplete:()=>{r(),a.onComplete&&a.onComplete()}};if(function({when:t,delay:e,delayChildren:n,staggerChildren:s,staggerDirection:i,repeat:o,repeatType:r,repeatDelay:a,from:l,elapsed:u,...c}){return!!Object.keys(c).length}(a)||(f={...f,...Me(t,f)}),f.duration&&(f.duration=Ct(f.duration)),f.repeatDelay&&(f.repeatDelay=Ct(f.repeatDelay)),!m||!p||!1===a.type)return function({keyframes:t,delay:e,onUpdate:s,onComplete:i}){const o=()=>(s&&s(t[t.length-1]),i&&i(),{time:0,speed:1,duration:0,play:n,pause:n,stop:n,then:t=>(t(),Promise.resolve()),cancel:n,complete:n});return e?Se({keyframes:[0,1],duration:0,delay:e,onComplete:o}):o()}(f);if(e.owner&&e.owner.current instanceof HTMLElement&&!e.owner.getProps().onUpdate){const s=function(t,e,{onUpdate:s,onComplete:i,...o}){if(!we()||!Ee.has(e)||o.repeatDelay||\"mirror\"===o.repeatType||0===o.damping||\"inertia\"===o.type)return!1;let r,a,l=!1;const u=()=>{a=new Promise((t=>{r=t}))};u();let{keyframes:c,duration:h=300,ease:d,times:m}=o;if(((t,e)=>\"spring\"===e.type||\"backgroundColor\"===t||!kt(e.ease))(e,o)){const t=Se({...o,repeat:0,delay:0});let e={done:!1,value:c[0]};const n=[];let s=0;for(;!e.done&&s<2e4;)e=t.sample(s),n.push(e.value),s+=10;m=void 0,c=n,h=s-10,d=\"linear\"}const p=function(t,e,n,{delay:s=0,duration:i,repeat:o=0,repeatType:r=\"loop\",ease:a,times:l}={}){const u={[e]:n};l&&(u.offset=l);const c=jt(a);return Array.isArray(c)&&(u.easing=c),t.animate(u,{delay:s,duration:i,easing:Array.isArray(c)?\"linear\":c,fill:\"both\",iterations:o+1,direction:\"reverse\"===r?\"alternate\":\"normal\"})}(t.owner.current,e,c,{...o,duration:h,ease:d,times:m});o.syncStart&&(p.startTime=x.isProcessing?x.timestamp:document.timeline?document.timeline.currentTime:performance.now());const f=()=>p.cancel(),g=()=>{y.update(f),r(),u()};return p.onfinish=()=>{t.set(function(t,{repeat:e,repeatType:n=\"loop\"}){return t[e&&\"loop\"!==n&&e%2==1?0:t.length-1]}(c,o)),i&&i(),g()},{then:(t,e)=>a.then(t,e),attachTimeline:t=>(p.timeline=t,p.onfinish=null,n),get time(){return Mt(p.currentTime||0)},set time(t){p.currentTime=Ct(t)},get speed(){return p.playbackRate},set speed(t){p.playbackRate=t},get duration(){return Mt(h)},play:()=>{l||(p.play(),v(f))},pause:()=>p.pause(),stop:()=>{if(l=!0,\"idle\"===p.playState)return;const{currentTime:e}=p;if(e){const n=Se({...o,autoplay:!1});t.setWithVelocity(n.sample(e-10).value,n.sample(e).value,10)}g()},complete:()=>p.finish(),cancel:g}}(e,t,f);if(s)return s}return Se(f)},je=t=>Boolean(t&&t.getVelocity);function Be(t){return Boolean(je(t)&&t.add)}function Fe({protectedKeys:t,needsAnimating:e},n){const s=t.hasOwnProperty(n)&&!0!==e[n];return e[n]=!1,s}function Oe(t,e,{delay:n=0,transitionOverride:s,type:i}={}){let{transition:o=t.getDefaultTransition(),transitionEnd:r,...a}=t.makeTargetAnimatable(e);const l=t.getValue(\"willChange\");s&&(o=s);const u=[],c=i&&t.animationState&&t.animationState.getState()[i];for(const e in a){const s=t.getValue(e),i=a[e];if(!s||void 0===i||c&&Fe(c,e))continue;const r={delay:n,elapsed:0,...o};if(window.HandoffAppearAnimations&&!s.hasAnimated){const n=t.getProps()[Vt];n&&(r.elapsed=window.HandoffAppearAnimations(n,e,s,y),r.syncStart=!0)}s.start(Le(e,s,i,t.shouldReduceMotion&&Et.has(e)?{type:!1}:r));const h=s.animation;Be(l)&&(l.add(e),h.then((()=>l.remove(e)))),u.push(h)}return r&&Promise.all(u).then((()=>{r&&bt(t,r)})),u}function Ie(t,e,n={}){const s=xt(t,e,n.custom);let{transition:i=t.getDefaultTransition()||{}}=s||{};n.transitionOverride&&(i=n.transitionOverride);const o=s?()=>Promise.all(Oe(t,s,n)):()=>Promise.resolve(),r=t.variantChildren&&t.variantChildren.size?(s=0)=>{const{delayChildren:o=0,staggerChildren:r,staggerDirection:a}=i;return function(t,e,n=0,s=0,i=1,o){const r=[],a=(t.variantChildren.size-1)*s,l=1===i?(t=0)=>t*s:(t=0)=>a-t*s;return Array.from(t.variantChildren).sort(Ue).forEach(((t,s)=>{t.notify(\"AnimationStart\",e),r.push(Ie(t,e,{...o,delay:n+l(s)}).then((()=>t.notify(\"AnimationComplete\",e))))})),Promise.all(r)}(t,e,o+s,r,a,n)}:()=>Promise.resolve(),{when:a}=i;if(a){const[t,e]=\"beforeChildren\"===a?[o,r]:[r,o];return t().then((()=>e()))}return Promise.all([o(),r(n.delay)])}function Ue(t,e){return t.sortNodePosition(e)}function Ne(t,e,n={}){let s;if(t.notify(\"AnimationStart\",e),Array.isArray(e)){const i=e.map((e=>Ie(t,e,n)));s=Promise.all(i)}else if(\"string\"==typeof e)s=Ie(t,e,n);else{const i=\"function\"==typeof e?xt(t,e,n.custom):e;s=Promise.all(Oe(t,i,n))}return s.then((()=>t.notify(\"AnimationComplete\",e)))}function $e(){let t=!1;const e=new Set,n={subscribe:t=>(e.add(t),()=>{e.delete(t)}),start(n,s){r(t,\"controls.start() should only be called after a component has mounted. Consider calling within a useEffect hook.\");const i=[];return e.forEach((t=>{i.push(Ne(t,n,{transitionOverride:s}))})),Promise.all(i)},set:n=>(r(t,\"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\"),e.forEach((t=>{!function(t,e){Array.isArray(e)?Tt(t,e):\"string\"==typeof e?Tt(t,[e]):bt(t,e)}(t,n)}))),stop(){e.forEach((t=>{!function(t){t.values.forEach((t=>t.stop()))}(t)}))},mount:()=>(t=!0,()=>{t=!1,n.stop()})};return n}function We(e){const n=(0,t.useRef)(null);return null===n.current&&(n.current=e()),n.current}const He=\"undefined\"!=typeof document,ze=He?t.useLayoutEffect:t.useEffect,Ye=(0,t.createContext)({transformPagePoint:t=>t,isStatic:!1,reducedMotion:\"never\"}),Xe=(0,t.createContext)({}),Ge=(0,t.createContext)(null),qe=(0,t.createContext)({strict:!1});function Ze(t){return\"object\"==typeof t&&Object.prototype.hasOwnProperty.call(t,\"current\")}function Ke(t){return\"string\"==typeof t||Array.isArray(t)}function _e(t){return\"object\"==typeof t&&\"function\"==typeof t.start}const Je=[\"animate\",\"whileInView\",\"whileFocus\",\"whileHover\",\"whileTap\",\"whileDrag\",\"exit\"],Qe=[\"initial\",...Je];function tn(t){return _e(t.animate)||Qe.some((e=>Ke(t[e])))}function en(t){return Boolean(tn(t)||t.variants)}function nn(t){return Array.isArray(t)?t.join(\" \"):t}const sn={animation:[\"animate\",\"variants\",\"whileHover\",\"whileTap\",\"exit\",\"whileInView\",\"whileFocus\",\"whileDrag\"],exit:[\"exit\"],drag:[\"drag\",\"dragControls\"],focus:[\"whileFocus\"],hover:[\"whileHover\",\"onHoverStart\",\"onHoverEnd\"],tap:[\"whileTap\",\"onTap\",\"onTapStart\",\"onTapCancel\"],pan:[\"onPan\",\"onPanStart\",\"onPanSessionStart\",\"onPanEnd\"],inView:[\"whileInView\",\"onViewportEnter\",\"onViewportLeave\"],layout:[\"layout\",\"layoutId\"]},on={};for(const t in sn)on[t]={isEnabled:e=>sn[t].some((t=>!!e[t]))};const rn=(0,t.createContext)({}),an=(0,t.createContext)({}),ln=Symbol.for(\"motionComponentSymbol\");function un({preloadedFeatures:e,createVisualElement:n,useRender:s,useVisualState:i,Component:o}){e&&function(t){for(const e in t)on[e]={...on[e],...t[e]}}(e);const r=(0,t.forwardRef)((function(r,a){let l;const u={...(0,t.useContext)(Ye),...r,layoutId:cn(r)},{isStatic:c}=u,h=function(e){const{initial:n,animate:s}=function(t,e){if(tn(t)){const{initial:e,animate:n}=t;return{initial:!1===e||Ke(e)?e:void 0,animate:Ke(n)?n:void 0}}return!1!==t.inherit?e:{}}(e,(0,t.useContext)(Xe));return(0,t.useMemo)((()=>({initial:n,animate:s})),[nn(n),nn(s)])}(r),d=i(r,c);if(!c&&He){h.visualElement=function(e,n,s,i){const{visualElement:o}=(0,t.useContext)(Xe),r=(0,t.useContext)(qe),a=(0,t.useContext)(Ge),l=(0,t.useContext)(Ye).reducedMotion,u=(0,t.useRef)();i=i||r.renderer,!u.current&&i&&(u.current=i(e,{visualState:n,parent:o,props:s,presenceContext:a,blockInitialAnimation:!!a&&!1===a.initial,reducedMotionConfig:l}));const c=u.current;(0,t.useInsertionEffect)((()=>{c&&c.update(s,a)}));const h=(0,t.useRef)(Boolean(window.HandoffAppearAnimations));return ze((()=>{c&&(c.render(),h.current&&c.animationState&&c.animationState.animateChanges())})),(0,t.useEffect)((()=>{c&&(c.updateFeatures(),!h.current&&c.animationState&&c.animationState.animateChanges(),window.HandoffAppearAnimations=void 0,h.current=!1)})),c}(o,d,u,n);const s=(0,t.useContext)(an),i=(0,t.useContext)(qe).strict;h.visualElement&&(l=h.visualElement.loadFeatures(u,i,e,s))}return t.createElement(Xe.Provider,{value:h},l&&h.visualElement?t.createElement(l,{visualElement:h.visualElement,...u}):null,s(o,r,function(e,n,s){return(0,t.useCallback)((t=>{t&&e.mount&&e.mount(t),n&&(t?n.mount(t):n.unmount()),s&&(\"function\"==typeof s?s(t):Ze(s)&&(s.current=t))}),[n])}(d,h.visualElement,a),d,c,h.visualElement))}));return r[ln]=o,r}function cn({layoutId:e}){const n=(0,t.useContext)(rn).id;return n&&void 0!==e?n+\"-\"+e:e}function hn(t){function e(e,n={}){return un(t(e,n))}if(\"undefined\"==typeof Proxy)return e;const n=new Map;return new Proxy(e,{get:(t,s)=>(n.has(s)||n.set(s,e(s)),n.get(s))})}const dn=[\"animate\",\"circle\",\"defs\",\"desc\",\"ellipse\",\"g\",\"image\",\"line\",\"filter\",\"marker\",\"mask\",\"metadata\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"rect\",\"stop\",\"switch\",\"symbol\",\"svg\",\"text\",\"tspan\",\"use\",\"view\"];function mn(t){return\"string\"==typeof t&&!t.includes(\"-\")&&!!(dn.indexOf(t)>-1||/[A-Z]/.test(t))}const pn={};function fn(t,{layout:e,layoutId:n}){return Et.has(t)||t.startsWith(\"origin\")||(e||void 0!==n)&&(!!pn[t]||\"opacity\"===t)}const gn={x:\"translateX\",y:\"translateY\",z:\"translateZ\",transformPerspective:\"perspective\"},yn=wt.length,vn=(t,e)=>e&&\"number\"==typeof t?e.transform(t):t;function xn(t,e,n,s){const{style:i,vars:o,transform:r,transformOrigin:a}=t;let l=!1,u=!1,c=!0;for(const t in e){const n=e[t];if(E(t)){o[t]=n;continue}const s=ct[t],h=vn(n,s);if(Et.has(t)){if(l=!0,r[t]=h,!c)continue;n!==(s.default||0)&&(c=!1)}else t.startsWith(\"origin\")?(u=!0,a[t]=h):i[t]=h}if(e.transform||(l||s?i.transform=function(t,{enableHardwareAcceleration:e=!0,allowTransformNone:n=!0},s,i){let o=\"\";for(let e=0;e<yn;e++){const n=wt[e];void 0!==t[n]&&(o+=`${gn[n]||n}(${t[n]}) `)}return e&&!t.z&&(o+=\"translateZ(0)\"),o=o.trim(),i?o=i(t,s?\"\":o):n&&s&&(o=\"none\"),o}(t.transform,n,c,s):i.transform&&(i.transform=\"none\")),u){const{originX:t=\"50%\",originY:e=\"50%\",originZ:n=0}=a;i.transformOrigin=`${t} ${e} ${n}`}}function Pn(t,e,n){for(const s in e)je(e[s])||fn(s,n)||(t[s]=e[s])}function bn(e,n,s){const i={},o=function(e,n,s){const i={};return Pn(i,e.style||{},e),Object.assign(i,function({transformTemplate:e},n,s){return(0,t.useMemo)((()=>{const t={style:{},transform:{},transformOrigin:{},vars:{}};return xn(t,n,{enableHardwareAcceleration:!s},e),Object.assign({},t.vars,t.style)}),[n])}(e,n,s)),e.transformValues?e.transformValues(i):i}(e,n,s);return e.drag&&!1!==e.dragListener&&(i.draggable=!1,o.userSelect=o.WebkitUserSelect=o.WebkitTouchCallout=\"none\",o.touchAction=!0===e.drag?\"none\":\"pan-\"+(\"x\"===e.drag?\"y\":\"x\")),void 0===e.tabIndex&&(e.onTap||e.onTapStart||e.whileTap)&&(i.tabIndex=0),i.style=o,i}const Tn=new Set([\"animate\",\"exit\",\"variants\",\"initial\",\"style\",\"values\",\"variants\",\"transition\",\"transformTemplate\",\"transformValues\",\"custom\",\"inherit\",\"onLayoutAnimationStart\",\"onLayoutAnimationComplete\",\"onLayoutMeasure\",\"onBeforeLayoutMeasure\",\"onAnimationStart\",\"onAnimationComplete\",\"onUpdate\",\"onDragStart\",\"onDrag\",\"onDragEnd\",\"onMeasureDragConstraints\",\"onDirectionLock\",\"onDragTransitionEnd\",\"_dragX\",\"_dragY\",\"onHoverStart\",\"onHoverEnd\",\"onViewportEnter\",\"onViewportLeave\",\"ignoreStrict\",\"viewport\"]);function Sn(t){return t.startsWith(\"while\")||t.startsWith(\"drag\")&&\"draggable\"!==t||t.startsWith(\"layout\")||t.startsWith(\"onTap\")||t.startsWith(\"onPan\")||Tn.has(t)}let wn=t=>!Sn(t);try{(En=(__webpack_require__(/*! @emotion/is-prop-valid */ \"(app-pages-browser)/./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js\")[\"default\"]))&&(wn=t=>t.startsWith(\"on\")?!Sn(t):En(t))}catch(t){}var En;function An(t,e,n){return\"string\"==typeof t?t:z.transform(e+n*t)}const Vn={offset:\"stroke-dashoffset\",array:\"stroke-dasharray\"},Cn={offset:\"strokeDashoffset\",array:\"strokeDasharray\"};function Mn(t,{attrX:e,attrY:n,attrScale:s,originX:i,originY:o,pathLength:r,pathSpacing:a=1,pathOffset:l=0,...u},c,h,d){if(xn(t,u,c,d),h)return void(t.style.viewBox&&(t.attrs.viewBox=t.style.viewBox));t.attrs=t.style,t.style={};const{attrs:m,style:p,dimensions:f}=t;m.transform&&(f&&(p.transform=m.transform),delete m.transform),f&&(void 0!==i||void 0!==o||p.transform)&&(p.transformOrigin=function(t,e,n){return`${An(e,t.x,t.width)} ${An(n,t.y,t.height)}`}(f,void 0!==i?i:.5,void 0!==o?o:.5)),void 0!==e&&(m.x=e),void 0!==n&&(m.y=n),void 0!==s&&(m.scale=s),void 0!==r&&function(t,e,n=1,s=0,i=!0){t.pathLength=1;const o=i?Vn:Cn;t[o.offset]=z.transform(-s);const r=z.transform(e),a=z.transform(n);t[o.array]=`${r} ${a}`}(m,r,a,l,!1)}const Dn=t=>\"string\"==typeof t&&\"svg\"===t.toLowerCase();function kn(e,n,s,i){const o=(0,t.useMemo)((()=>{const t={style:{},transform:{},transformOrigin:{},vars:{},attrs:{}};return Mn(t,n,{enableHardwareAcceleration:!1},Dn(i),e.transformTemplate),{...t.attrs,style:{...t.style}}}),[n]);if(e.style){const t={};Pn(t,e.style,e),o.style={...t,...o.style}}return o}function Rn(e=!1){return(n,s,i,{latestValues:o},r)=>{const a=(mn(n)?kn:bn)(s,o,r,n),l={...function(t,e,n){const s={};for(const i in t)\"values\"===i&&\"object\"==typeof t.values||(wn(i)||!0===n&&Sn(i)||!e&&!Sn(i)||t.draggable&&i.startsWith(\"onDrag\"))&&(s[i]=t[i]);return s}(s,\"string\"==typeof n,e),...a,ref:i},{children:u}=s,c=(0,t.useMemo)((()=>je(u)?u.get():u),[u]);return(0,t.createElement)(n,{...l,children:c})}}function Ln(t,{style:e,vars:n},s,i){Object.assign(t.style,e,i&&i.getProjectionStyles(s));for(const e in n)t.style.setProperty(e,n[e])}const jn=new Set([\"baseFrequency\",\"diffuseConstant\",\"kernelMatrix\",\"kernelUnitLength\",\"keySplines\",\"keyTimes\",\"limitingConeAngle\",\"markerHeight\",\"markerWidth\",\"numOctaves\",\"targetX\",\"targetY\",\"surfaceScale\",\"specularConstant\",\"specularExponent\",\"stdDeviation\",\"tableValues\",\"viewBox\",\"gradientTransform\",\"pathLength\",\"startOffset\",\"textLength\",\"lengthAdjust\"]);function Bn(t,e,n,s){Ln(t,e,void 0,s);for(const n in e.attrs)t.setAttribute(jn.has(n)?n:At(n),e.attrs[n])}function Fn(t,e){const{style:n}=t,s={};for(const i in n)(je(n[i])||e.style&&je(e.style[i])||fn(i,t))&&(s[i]=n[i]);return s}function On(t,e){const n=Fn(t,e);for(const s in t)(je(t[s])||je(e[s]))&&(n[-1!==wt.indexOf(s)?\"attr\"+s.charAt(0).toUpperCase()+s.substring(1):s]=t[s]);return n}function In(t){const e=je(t)?t.get():t;return n=e,Boolean(n&&\"object\"==typeof n&&n.mix&&n.toValue)?e.toValue():e;var n}const Un=e=>(n,s)=>{const i=(0,t.useContext)(Xe),o=(0,t.useContext)(Ge),r=()=>function({scrapeMotionValuesFromProps:t,createRenderState:e,onMount:n},s,i,o){const r={latestValues:Nn(s,i,o,t),renderState:e()};return n&&(r.mount=t=>n(s,t,r)),r}(e,n,i,o);return s?r():We(r)};function Nn(t,e,n,s){const i={},o=s(t,{});for(const t in o)i[t]=In(o[t]);let{initial:r,animate:a}=t;const l=tn(t),u=en(t);e&&u&&!l&&!1!==t.inherit&&(void 0===r&&(r=e.initial),void 0===a&&(a=e.animate));let c=!!n&&!1===n.initial;c=c||!1===r;const h=c?a:r;return h&&\"boolean\"!=typeof h&&!_e(h)&&(Array.isArray(h)?h:[h]).forEach((e=>{const n=vt(t,e);if(!n)return;const{transitionEnd:s,transition:o,...r}=n;for(const t in r){let e=r[t];Array.isArray(e)&&(e=e[c?e.length-1:0]),null!==e&&(i[t]=e)}for(const t in s)i[t]=s[t]})),i}const $n={useVisualState:Un({scrapeMotionValuesFromProps:On,createRenderState:()=>({style:{},transform:{},transformOrigin:{},vars:{},attrs:{}}),onMount:(t,e,{renderState:n,latestValues:s})=>{y.read((()=>{try{n.dimensions=\"function\"==typeof e.getBBox?e.getBBox():e.getBoundingClientRect()}catch(t){n.dimensions={x:0,y:0,width:0,height:0}}})),y.render((()=>{Mn(n,s,{enableHardwareAcceleration:!1},Dn(e.tagName),t.transformTemplate),Bn(e,n)}))}})},Wn={useVisualState:Un({scrapeMotionValuesFromProps:Fn,createRenderState:()=>({style:{},transform:{},transformOrigin:{},vars:{}})})};function Hn(t,e,n,s={passive:!0}){return t.addEventListener(e,n,s),()=>t.removeEventListener(e,n)}const zn=t=>\"mouse\"===t.pointerType?\"number\"!=typeof t.button||t.button<=0:!1!==t.isPrimary;function Yn(t,e=\"page\"){return{point:{x:t[e+\"X\"],y:t[e+\"Y\"]}}}function Xn(t,e,n,s){return Hn(t,e,(t=>e=>zn(e)&&t(e,Yn(e)))(n),s)}function Gn(t){let e=null;return()=>null===e&&(e=t,()=>{e=null})}const qn=Gn(\"dragHorizontal\"),Zn=Gn(\"dragVertical\");function Kn(t){let e=!1;if(\"y\"===t)e=Zn();else if(\"x\"===t)e=qn();else{const t=qn(),n=Zn();t&&n?e=()=>{t(),n()}:(t&&t(),n&&n())}return e}function _n(){const t=Kn(!0);return!t||(t(),!1)}class Jn{constructor(t){this.isMounted=!1,this.node=t}update(){}}function Qn(t,e){const n=\"pointer\"+(e?\"enter\":\"leave\"),s=\"onHover\"+(e?\"Start\":\"End\");return Xn(t.current,n,((n,i)=>{if(\"touch\"===n.type||_n())return;const o=t.getProps();t.animationState&&o.whileHover&&t.animationState.setActive(\"whileHover\",e),o[s]&&y.update((()=>o[s](n,i)))}),{passive:!t.getProps()[s]})}const ts=(t,e)=>!!e&&(t===e||ts(t,e.parentElement));function es(t,e){if(!e)return;const n=new PointerEvent(\"pointer\"+t);e(n,Yn(n))}const ns=new WeakMap,ss=new WeakMap,is=t=>{const e=ns.get(t.target);e&&e(t)},os=t=>{t.forEach(is)};const rs={some:0,all:1},as={inView:{Feature:class extends Jn{constructor(){super(...arguments),this.hasEnteredView=!1,this.isInView=!1}startObserver(){this.unmount();const{viewport:t={}}=this.node.getProps(),{root:e,margin:n,amount:s=\"some\",once:i}=t,o={root:e?e.current:void 0,rootMargin:n,threshold:\"number\"==typeof s?s:rs[s]};return function(t,e,n){const s=function({root:t,...e}){const n=t||document;ss.has(n)||ss.set(n,{});const s=ss.get(n),i=JSON.stringify(e);return s[i]||(s[i]=new IntersectionObserver(os,{root:t,...e})),s[i]}(e);return ns.set(t,n),s.observe(t),()=>{ns.delete(t),s.unobserve(t)}}(this.node.current,o,(t=>{const{isIntersecting:e}=t;if(this.isInView===e)return;if(this.isInView=e,i&&!e&&this.hasEnteredView)return;e&&(this.hasEnteredView=!0),this.node.animationState&&this.node.animationState.setActive(\"whileInView\",e);const{onViewportEnter:n,onViewportLeave:s}=this.node.getProps(),o=e?n:s;o&&o(t)}))}mount(){this.startObserver()}update(){if(\"undefined\"==typeof IntersectionObserver)return;const{props:t,prevProps:e}=this.node;[\"amount\",\"margin\",\"root\"].some(function({viewport:t={}},{viewport:e={}}={}){return n=>t[n]!==e[n]}(t,e))&&this.startObserver()}unmount(){}}},tap:{Feature:class extends Jn{constructor(){super(...arguments),this.removeStartListeners=n,this.removeEndListeners=n,this.removeAccessibleListeners=n,this.startPointerPress=(t,e)=>{if(this.removeEndListeners(),this.isPressing)return;const n=this.node.getProps(),s=Xn(window,\"pointerup\",((t,e)=>{if(!this.checkPressEnd())return;const{onTap:n,onTapCancel:s}=this.node.getProps();y.update((()=>{ts(this.node.current,t.target)?n&&n(t,e):s&&s(t,e)}))}),{passive:!(n.onTap||n.onPointerUp)}),i=Xn(window,\"pointercancel\",((t,e)=>this.cancelPress(t,e)),{passive:!(n.onTapCancel||n.onPointerCancel)});this.removeEndListeners=se(s,i),this.startPress(t,e)},this.startAccessiblePress=()=>{const t=Hn(this.node.current,\"keydown\",(t=>{\"Enter\"!==t.key||this.isPressing||(this.removeEndListeners(),this.removeEndListeners=Hn(this.node.current,\"keyup\",(t=>{\"Enter\"===t.key&&this.checkPressEnd()&&es(\"up\",((t,e)=>{const{onTap:n}=this.node.getProps();n&&y.update((()=>n(t,e)))}))})),es(\"down\",((t,e)=>{this.startPress(t,e)})))})),e=Hn(this.node.current,\"blur\",(()=>{this.isPressing&&es(\"cancel\",((t,e)=>this.cancelPress(t,e)))}));this.removeAccessibleListeners=se(t,e)}}startPress(t,e){this.isPressing=!0;const{onTapStart:n,whileTap:s}=this.node.getProps();s&&this.node.animationState&&this.node.animationState.setActive(\"whileTap\",!0),n&&y.update((()=>n(t,e)))}checkPressEnd(){return this.removeEndListeners(),this.isPressing=!1,this.node.getProps().whileTap&&this.node.animationState&&this.node.animationState.setActive(\"whileTap\",!1),!_n()}cancelPress(t,e){if(!this.checkPressEnd())return;const{onTapCancel:n}=this.node.getProps();n&&y.update((()=>n(t,e)))}mount(){const t=this.node.getProps(),e=Xn(this.node.current,\"pointerdown\",this.startPointerPress,{passive:!(t.onTapStart||t.onPointerStart)}),n=Hn(this.node.current,\"focus\",this.startAccessiblePress);this.removeStartListeners=se(e,n)}unmount(){this.removeStartListeners(),this.removeEndListeners(),this.removeAccessibleListeners()}}},focus:{Feature:class extends Jn{constructor(){super(...arguments),this.isActive=!1}onFocus(){let t=!1;try{t=this.node.current.matches(\":focus-visible\")}catch(e){t=!0}t&&this.node.animationState&&(this.node.animationState.setActive(\"whileFocus\",!0),this.isActive=!0)}onBlur(){this.isActive&&this.node.animationState&&(this.node.animationState.setActive(\"whileFocus\",!1),this.isActive=!1)}mount(){this.unmount=se(Hn(this.node.current,\"focus\",(()=>this.onFocus())),Hn(this.node.current,\"blur\",(()=>this.onBlur())))}unmount(){}}},hover:{Feature:class extends Jn{mount(){this.unmount=se(Qn(this.node,!0),Qn(this.node,!1))}unmount(){}}}};function ls(t,e){if(!Array.isArray(e))return!1;const n=e.length;if(n!==t.length)return!1;for(let s=0;s<n;s++)if(e[s]!==t[s])return!1;return!0}const us=[...Je].reverse(),cs=Je.length;function hs(t=!1){return{isActive:t,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}let ds=0;const ms={animation:{Feature:class extends Jn{constructor(t){super(t),t.animationState||(t.animationState=function(t){let e=function(t){return e=>Promise.all(e.map((({animation:e,options:n})=>Ne(t,e,n))))}(t);const n={animate:hs(!0),whileInView:hs(),whileHover:hs(),whileTap:hs(),whileDrag:hs(),whileFocus:hs(),exit:hs()};let s=!0;const i=(e,n)=>{const s=xt(t,n);if(s){const{transition:t,transitionEnd:n,...i}=s;e={...e,...i,...n}}return e};function o(o,r){const a=t.getProps(),l=t.getVariantContext(!0)||{},u=[],h=new Set;let d={},m=1/0;for(let e=0;e<cs;e++){const g=us[e],y=n[g],v=void 0!==a[g]?a[g]:l[g],x=Ke(v),P=g===r?y.isActive:null;!1===P&&(m=e);let b=v===l[g]&&v!==a[g]&&x;if(b&&s&&t.manuallyAnimateOnMount&&(b=!1),y.protectedKeys={...d},!y.isActive&&null===P||!v&&!y.prevProp||_e(v)||\"boolean\"==typeof v)continue;const T=(p=y.prevProp,\"string\"==typeof(f=v)?f!==p:!!Array.isArray(f)&&!ls(f,p));let S=T||g===r&&y.isActive&&!b&&x||e>m&&x;const w=Array.isArray(v)?v:[v];let E=w.reduce(i,{});!1===P&&(E={});const{prevResolvedValues:A={}}=y,V={...A,...E},C=t=>{S=!0,h.delete(t),y.needsAnimating[t]=!0};for(const t in V){const e=E[t],n=A[t];d.hasOwnProperty(t)||(e!==n?c(e)&&c(n)?!ls(e,n)||T?C(t):y.protectedKeys[t]=!0:void 0!==e?C(t):h.add(t):void 0!==e&&h.has(t)?C(t):y.protectedKeys[t]=!0)}y.prevProp=v,y.prevResolvedValues=E,y.isActive&&(d={...d,...E}),s&&t.blockInitialAnimation&&(S=!1),S&&!b&&u.push(...w.map((t=>({animation:t,options:{type:g,...o}}))))}var p,f;if(h.size){const e={};h.forEach((n=>{const s=t.getBaseTarget(n);void 0!==s&&(e[n]=s)})),u.push({animation:e})}let g=Boolean(u.length);return s&&!1===a.initial&&!t.manuallyAnimateOnMount&&(g=!1),s=!1,g?e(u):Promise.resolve()}return{animateChanges:o,setActive:function(e,s,i){var r;if(n[e].isActive===s)return Promise.resolve();null===(r=t.variantChildren)||void 0===r||r.forEach((t=>{var n;return null===(n=t.animationState)||void 0===n?void 0:n.setActive(e,s)})),n[e].isActive=s;const a=o(i,e);for(const t in n)n[t].protectedKeys={};return a},setAnimateFunction:function(n){e=n(t)},getState:()=>n}}(t))}updateAnimationControlsSubscription(){const{animate:t}=this.node.getProps();this.unmount(),_e(t)&&(this.unmount=t.subscribe(this.node))}mount(){this.updateAnimationControlsSubscription()}update(){const{animate:t}=this.node.getProps(),{animate:e}=this.node.prevProps||{};t!==e&&this.updateAnimationControlsSubscription()}unmount(){}}},exit:{Feature:class extends Jn{constructor(){super(...arguments),this.id=ds++}update(){if(!this.node.presenceContext)return;const{isPresent:t,onExitComplete:e,custom:n}=this.node.presenceContext,{isPresent:s}=this.node.prevPresenceContext||{};if(!this.node.animationState||t===s)return;const i=this.node.animationState.setActive(\"exit\",!t,{custom:null!=n?n:this.node.getProps().custom});e&&!t&&i.then((()=>e(this.id)))}mount(){const{register:t}=this.node.presenceContext||{};t&&(this.unmount=t(this.id))}unmount(){}}}},ps=(t,e)=>Math.abs(t-e);class fs{constructor(t,e,{transformPagePoint:n}={}){if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.updatePoint=()=>{if(!this.lastMoveEvent||!this.lastMoveEventInfo)return;const t=vs(this.lastMoveEventInfo,this.history),e=null!==this.startEvent,n=function(t,e){const n=ps(t.x,e.x),s=ps(t.y,e.y);return Math.sqrt(n**2+s**2)}(t.offset,{x:0,y:0})>=3;if(!e&&!n)return;const{point:s}=t,{timestamp:i}=x;this.history.push({...s,timestamp:i});const{onStart:o,onMove:r}=this.handlers;e||(o&&o(this.lastMoveEvent,t),this.startEvent=this.lastMoveEvent),r&&r(this.lastMoveEvent,t)},this.handlePointerMove=(t,e)=>{this.lastMoveEvent=t,this.lastMoveEventInfo=gs(e,this.transformPagePoint),y.update(this.updatePoint,!0)},this.handlePointerUp=(t,e)=>{if(this.end(),!this.lastMoveEvent||!this.lastMoveEventInfo)return;const{onEnd:n,onSessionEnd:s}=this.handlers,i=vs(\"pointercancel\"===t.type?this.lastMoveEventInfo:gs(e,this.transformPagePoint),this.history);this.startEvent&&n&&n(t,i),s&&s(t,i)},!zn(t))return;this.handlers=e,this.transformPagePoint=n;const s=gs(Yn(t),this.transformPagePoint),{point:i}=s,{timestamp:o}=x;this.history=[{...i,timestamp:o}];const{onSessionStart:r}=e;r&&r(t,vs(s,this.history)),this.removeListeners=se(Xn(window,\"pointermove\",this.handlePointerMove),Xn(window,\"pointerup\",this.handlePointerUp),Xn(window,\"pointercancel\",this.handlePointerUp))}updateHandlers(t){this.handlers=t}end(){this.removeListeners&&this.removeListeners(),v(this.updatePoint)}}function gs(t,e){return e?{point:e(t.point)}:t}function ys(t,e){return{x:t.x-e.x,y:t.y-e.y}}function vs({point:t},e){return{point:t,delta:ys(t,Ps(e)),offset:ys(t,xs(e)),velocity:bs(e,.1)}}function xs(t){return t[0]}function Ps(t){return t[t.length-1]}function bs(t,e){if(t.length<2)return{x:0,y:0};let n=t.length-1,s=null;const i=Ps(t);for(;n>=0&&(s=t[n],!(i.timestamp-s.timestamp>Ct(e)));)n--;if(!s)return{x:0,y:0};const o=Mt(i.timestamp-s.timestamp);if(0===o)return{x:0,y:0};const r={x:(i.x-s.x)/o,y:(i.y-s.y)/o};return r.x===1/0&&(r.x=0),r.y===1/0&&(r.y=0),r}function Ts(t){return t.max-t.min}function Ss(t,e=0,n=.01){return Math.abs(t-e)<=n}function ws(t,e,n,s=.5){t.origin=s,t.originPoint=Kt(e.min,e.max,t.origin),t.scale=Ts(n)/Ts(e),(Ss(t.scale,1,1e-4)||isNaN(t.scale))&&(t.scale=1),t.translate=Kt(n.min,n.max,t.origin)-t.originPoint,(Ss(t.translate)||isNaN(t.translate))&&(t.translate=0)}function Es(t,e,n,s){ws(t.x,e.x,n.x,s?s.originX:void 0),ws(t.y,e.y,n.y,s?s.originY:void 0)}function As(t,e,n){t.min=n.min+e.min,t.max=t.min+Ts(e)}function Vs(t,e,n){t.min=e.min-n.min,t.max=t.min+Ts(e)}function Cs(t,e,n){Vs(t.x,e.x,n.x),Vs(t.y,e.y,n.y)}function Ms(t,e,n){return{min:void 0!==e?t.min+e:void 0,max:void 0!==n?t.max+n-(t.max-t.min):void 0}}function Ds(t,e){let n=e.min-t.min,s=e.max-t.max;return e.max-e.min<t.max-t.min&&([n,s]=[s,n]),{min:n,max:s}}const ks=.35;function Rs(t,e,n){return{min:Ls(t,e),max:Ls(t,n)}}function Ls(t,e){return\"number\"==typeof t?t:t[e]||0}function js(t){return[t(\"x\"),t(\"y\")]}function Bs({top:t,left:e,right:n,bottom:s}){return{x:{min:e,max:n},y:{min:t,max:s}}}function Fs(t){return void 0===t||1===t}function Os({scale:t,scaleX:e,scaleY:n}){return!Fs(t)||!Fs(e)||!Fs(n)}function Is(t){return Os(t)||Us(t)||t.z||t.rotate||t.rotateX||t.rotateY}function Us(t){return Ns(t.x)||Ns(t.y)}function Ns(t){return t&&\"0%\"!==t}function $s(t,e,n){return n+e*(t-n)}function Ws(t,e,n,s,i){return void 0!==i&&(t=$s(t,i,s)),$s(t,n,s)+e}function Hs(t,e=0,n=1,s,i){t.min=Ws(t.min,e,n,s,i),t.max=Ws(t.max,e,n,s,i)}function zs(t,{x:e,y:n}){Hs(t.x,e.translate,e.scale,e.originPoint),Hs(t.y,n.translate,n.scale,n.originPoint)}function Ys(t){return Number.isInteger(t)||t>1.0000000000001||t<.999999999999?t:1}function Xs(t,e){t.min=t.min+e,t.max=t.max+e}function Gs(t,e,[n,s,i]){const o=void 0!==e[i]?e[i]:.5,r=Kt(t.min,t.max,o);Hs(t,e[n],e[s],r,e.scale)}const qs=[\"x\",\"scaleX\",\"originX\"],Zs=[\"y\",\"scaleY\",\"originY\"];function Ks(t,e){Gs(t.x,e,qs),Gs(t.y,e,Zs)}function _s(t,e){return Bs(function(t,e){if(!e)return t;const n=e({x:t.left,y:t.top}),s=e({x:t.right,y:t.bottom});return{top:n.y,left:n.x,bottom:s.y,right:s.x}}(t.getBoundingClientRect(),e))}const Js=new WeakMap;class Qs{constructor(t){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic={x:{min:0,max:0},y:{min:0,max:0}},this.visualElement=t}start(t,{snapToCursor:e=!1}={}){const{presenceContext:n}=this.visualElement;n&&!1===n.isPresent||(this.panSession=new fs(t,{onSessionStart:t=>{this.stopAnimation(),e&&this.snapToCursor(Yn(t,\"page\").point)},onStart:(t,e)=>{const{drag:n,dragPropagation:s,onDragStart:i}=this.getProps();if(n&&!s&&(this.openGlobalLock&&this.openGlobalLock(),this.openGlobalLock=Kn(n),!this.openGlobalLock))return;this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),js((t=>{let e=this.getAxisMotionValue(t).get()||0;if(H.test(e)){const{projection:n}=this.visualElement;if(n&&n.layout){const s=n.layout.layoutBox[t];s&&(e=Ts(s)*(parseFloat(e)/100))}}this.originPoint[t]=e})),i&&y.update((()=>i(t,e)),!1,!0);const{animationState:o}=this.visualElement;o&&o.setActive(\"whileDrag\",!0)},onMove:(t,e)=>{const{dragPropagation:n,dragDirectionLock:s,onDirectionLock:i,onDrag:o}=this.getProps();if(!n&&!this.openGlobalLock)return;const{offset:r}=e;if(s&&null===this.currentDirection)return this.currentDirection=function(t,e=10){let n=null;return Math.abs(t.y)>e?n=\"y\":Math.abs(t.x)>e&&(n=\"x\"),n}(r),void(null!==this.currentDirection&&i&&i(this.currentDirection));this.updateAxis(\"x\",e.point,r),this.updateAxis(\"y\",e.point,r),this.visualElement.render(),o&&o(t,e)},onSessionEnd:(t,e)=>this.stop(t,e)},{transformPagePoint:this.visualElement.getTransformPagePoint()}))}stop(t,e){const n=this.isDragging;if(this.cancel(),!n)return;const{velocity:s}=e;this.startAnimation(s);const{onDragEnd:i}=this.getProps();i&&y.update((()=>i(t,e)))}cancel(){this.isDragging=!1;const{projection:t,animationState:e}=this.visualElement;t&&(t.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;const{dragPropagation:n}=this.getProps();!n&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),e&&e.setActive(\"whileDrag\",!1)}updateAxis(t,e,n){const{drag:s}=this.getProps();if(!n||!ti(t,s,this.currentDirection))return;const i=this.getAxisMotionValue(t);let o=this.originPoint[t]+n[t];this.constraints&&this.constraints[t]&&(o=function(t,{min:e,max:n},s){return void 0!==e&&t<e?t=s?Kt(e,t,s.min):Math.max(t,e):void 0!==n&&t>n&&(t=s?Kt(n,t,s.max):Math.min(t,n)),t}(o,this.constraints[t],this.elastic[t])),i.set(o)}resolveConstraints(){const{dragConstraints:t,dragElastic:e}=this.getProps(),{layout:n}=this.visualElement.projection||{},s=this.constraints;t&&Ze(t)?this.constraints||(this.constraints=this.resolveRefConstraints()):this.constraints=!(!t||!n)&&function(t,{top:e,left:n,bottom:s,right:i}){return{x:Ms(t.x,n,i),y:Ms(t.y,e,s)}}(n.layoutBox,t),this.elastic=function(t=ks){return!1===t?t=0:!0===t&&(t=ks),{x:Rs(t,\"left\",\"right\"),y:Rs(t,\"top\",\"bottom\")}}(e),s!==this.constraints&&n&&this.constraints&&!this.hasMutatedConstraints&&js((t=>{this.getAxisMotionValue(t)&&(this.constraints[t]=function(t,e){const n={};return void 0!==e.min&&(n.min=e.min-t.min),void 0!==e.max&&(n.max=e.max-t.min),n}(n.layoutBox[t],this.constraints[t]))}))}resolveRefConstraints(){const{dragConstraints:t,onMeasureDragConstraints:e}=this.getProps();if(!t||!Ze(t))return!1;const n=t.current;r(null!==n,\"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");const{projection:s}=this.visualElement;if(!s||!s.layout)return!1;const i=function(t,e,n){const s=_s(t,n),{scroll:i}=e;return i&&(Xs(s.x,i.offset.x),Xs(s.y,i.offset.y)),s}(n,s.root,this.visualElement.getTransformPagePoint());let o=function(t,e){return{x:Ds(t.x,e.x),y:Ds(t.y,e.y)}}(s.layout.layoutBox,i);if(e){const t=e(function({x:t,y:e}){return{top:e.min,right:t.max,bottom:e.max,left:t.min}}(o));this.hasMutatedConstraints=!!t,t&&(o=Bs(t))}return o}startAnimation(t){const{drag:e,dragMomentum:n,dragElastic:s,dragTransition:i,dragSnapToOrigin:o,onDragTransitionEnd:r}=this.getProps(),a=this.constraints||{},l=js((r=>{if(!ti(r,e,this.currentDirection))return;let l=a&&a[r]||{};o&&(l={min:0,max:0});const u=s?200:1e6,c=s?40:1e7,h={type:\"inertia\",velocity:n?t[r]:0,bounceStiffness:u,bounceDamping:c,timeConstant:750,restDelta:1,restSpeed:10,...i,...l};return this.startAxisValueAnimation(r,h)}));return Promise.all(l).then(r)}startAxisValueAnimation(t,e){const n=this.getAxisMotionValue(t);return n.start(Le(t,n,0,e))}stopAnimation(){js((t=>this.getAxisMotionValue(t).stop()))}getAxisMotionValue(t){const e=\"_drag\"+t.toUpperCase(),n=this.visualElement.getProps();return n[e]||this.visualElement.getValue(t,(n.initial?n.initial[t]:void 0)||0)}snapToCursor(t){js((e=>{const{drag:n}=this.getProps();if(!ti(e,n,this.currentDirection))return;const{projection:s}=this.visualElement,i=this.getAxisMotionValue(e);if(s&&s.layout){const{min:n,max:o}=s.layout.layoutBox[e];i.set(t[e]-Kt(n,o,.5))}}))}scalePositionWithinConstraints(){if(!this.visualElement.current)return;const{drag:t,dragConstraints:e}=this.getProps(),{projection:n}=this.visualElement;if(!Ze(e)||!n||!this.constraints)return;this.stopAnimation();const s={x:0,y:0};js((t=>{const e=this.getAxisMotionValue(t);if(e){const n=e.get();s[t]=function(t,e){let n=.5;const s=Ts(t),i=Ts(e);return i>s?n=ue(e.min,e.max-s,t.min):s>i&&(n=ue(t.min,t.max-i,e.min)),R(0,1,n)}({min:n,max:n},this.constraints[t])}}));const{transformTemplate:i}=this.visualElement.getProps();this.visualElement.current.style.transform=i?i({},\"\"):\"none\",n.root&&n.root.updateScroll(),n.updateLayout(),this.resolveConstraints(),js((e=>{if(!ti(e,t,null))return;const n=this.getAxisMotionValue(e),{min:i,max:o}=this.constraints[e];n.set(Kt(i,o,s[e]))}))}addListeners(){if(!this.visualElement.current)return;Js.set(this.visualElement,this);const t=Xn(this.visualElement.current,\"pointerdown\",(t=>{const{drag:e,dragListener:n=!0}=this.getProps();e&&n&&this.start(t)})),e=()=>{const{dragConstraints:t}=this.getProps();Ze(t)&&(this.constraints=this.resolveRefConstraints())},{projection:n}=this.visualElement,s=n.addEventListener(\"measure\",e);n&&!n.layout&&(n.root&&n.root.updateScroll(),n.updateLayout()),e();const i=Hn(window,\"resize\",(()=>this.scalePositionWithinConstraints())),o=n.addEventListener(\"didUpdate\",(({delta:t,hasLayoutChanged:e})=>{this.isDragging&&e&&(js((e=>{const n=this.getAxisMotionValue(e);n&&(this.originPoint[e]+=t[e].translate,n.set(n.get()+t[e].translate))})),this.visualElement.render())}));return()=>{i(),t(),s(),o&&o()}}getProps(){const t=this.visualElement.getProps(),{drag:e=!1,dragDirectionLock:n=!1,dragPropagation:s=!1,dragConstraints:i=!1,dragElastic:o=ks,dragMomentum:r=!0}=t;return{...t,drag:e,dragDirectionLock:n,dragPropagation:s,dragConstraints:i,dragElastic:o,dragMomentum:r}}}function ti(t,e,n){return!(!0!==e&&e!==t||null!==n&&n!==t)}const ei=t=>(e,n)=>{t&&y.update((()=>t(e,n)))},ni={hasAnimatedSinceResize:!0,hasEverUpdated:!1};function si(t,e){return e.max===e.min?0:t/(e.max-e.min)*100}const ii={correct:(t,e)=>{if(!e.target)return t;if(\"string\"==typeof t){if(!z.test(t))return t;t=parseFloat(t)}return`${si(t,e.target.x)}% ${si(t,e.target.y)}%`}},oi={correct:(t,{treeScale:e,projectionDelta:n})=>{const s=t,i=it.parse(t);if(i.length>5)return s;const o=it.createTransformer(t),r=\"number\"!=typeof i[0]?1:0,a=n.x.scale*e.x,l=n.y.scale*e.y;i[0+r]/=a,i[1+r]/=l;const u=Kt(a,l,.5);return\"number\"==typeof i[2+r]&&(i[2+r]/=u),\"number\"==typeof i[3+r]&&(i[3+r]/=u),o(i)}};class ri extends t.Component{componentDidMount(){const{visualElement:t,layoutGroup:e,switchLayoutGroup:n,layoutId:s}=this.props,{projection:i}=t;var o;o=li,Object.assign(pn,o),i&&(e.group&&e.group.add(i),n&&n.register&&s&&n.register(i),i.root.didUpdate(),i.addEventListener(\"animationComplete\",(()=>{this.safeToRemove()})),i.setOptions({...i.options,onExitComplete:()=>this.safeToRemove()})),ni.hasEverUpdated=!0}getSnapshotBeforeUpdate(t){const{layoutDependency:e,visualElement:n,drag:s,isPresent:i}=this.props,o=n.projection;return o?(o.isPresent=i,s||t.layoutDependency!==e||void 0===e?o.willUpdate():this.safeToRemove(),t.isPresent!==i&&(i?o.promote():o.relegate()||y.postRender((()=>{const t=o.getStack();t&&t.members.length||this.safeToRemove()}))),null):null}componentDidUpdate(){const{projection:t}=this.props.visualElement;t&&(t.root.didUpdate(),queueMicrotask((()=>{!t.currentAnimation&&t.isLead()&&this.safeToRemove()})))}componentWillUnmount(){const{visualElement:t,layoutGroup:e,switchLayoutGroup:n}=this.props,{projection:s}=t;s&&(s.scheduleCheckAfterUnmount(),e&&e.group&&e.group.remove(s),n&&n.deregister&&n.deregister(s))}safeToRemove(){const{safeToRemove:t}=this.props;t&&t()}render(){return null}}function ai(e){const[n,s]=function(){const e=(0,t.useContext)(Ge);if(null===e)return[!0,null];const{isPresent:n,onExitComplete:s,register:i}=e,o=(0,t.useId)();return(0,t.useEffect)((()=>i(o)),[]),!n&&s?[!1,()=>s&&s(o)]:[!0]}(),i=(0,t.useContext)(rn);return t.createElement(ri,{...e,layoutGroup:i,switchLayoutGroup:(0,t.useContext)(an),isPresent:n,safeToRemove:s})}const li={borderRadius:{...ii,applyTo:[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\"]},borderTopLeftRadius:ii,borderTopRightRadius:ii,borderBottomLeftRadius:ii,borderBottomRightRadius:ii,boxShadow:oi},ui=[\"TopLeft\",\"TopRight\",\"BottomLeft\",\"BottomRight\"],ci=ui.length,hi=t=>\"string\"==typeof t?parseFloat(t):t,di=t=>\"number\"==typeof t||z.test(t);function mi(t,e){return void 0!==t[e]?t[e]:t.borderRadius}const pi=gi(0,.5,Ht),fi=gi(.5,.95,n);function gi(t,e,n){return s=>s<t?0:s>e?1:n(ue(t,e,s))}function yi(t,e){t.min=e.min,t.max=e.max}function vi(t,e){yi(t.x,e.x),yi(t.y,e.y)}function xi(t,e,n,s,i){return t=$s(t-=e,1/n,s),void 0!==i&&(t=$s(t,1/i,s)),t}function Pi(t,e,[n,s,i],o,r){!function(t,e=0,n=1,s=.5,i,o=t,r=t){if(H.test(e)&&(e=parseFloat(e),e=Kt(r.min,r.max,e/100)-r.min),\"number\"!=typeof e)return;let a=Kt(o.min,o.max,s);t===o&&(a-=e),t.min=xi(t.min,e,n,a,i),t.max=xi(t.max,e,n,a,i)}(t,e[n],e[s],e[i],e.scale,o,r)}const bi=[\"x\",\"scaleX\",\"originX\"],Ti=[\"y\",\"scaleY\",\"originY\"];function Si(t,e,n,s){Pi(t.x,e,bi,n?n.x:void 0,s?s.x:void 0),Pi(t.y,e,Ti,n?n.y:void 0,s?s.y:void 0)}function wi(t){return 0===t.translate&&1===t.scale}function Ei(t){return wi(t.x)&&wi(t.y)}function Ai(t,e){return Math.round(t.x.min)===Math.round(e.x.min)&&Math.round(t.x.max)===Math.round(e.x.max)&&Math.round(t.y.min)===Math.round(e.y.min)&&Math.round(t.y.max)===Math.round(e.y.max)}function Vi(t){return Ts(t.x)/Ts(t.y)}class Ci{constructor(){this.members=[]}add(t){h(this.members,t),t.scheduleRender()}remove(t){if(d(this.members,t),t===this.prevLead&&(this.prevLead=void 0),t===this.lead){const t=this.members[this.members.length-1];t&&this.promote(t)}}relegate(t){const e=this.members.findIndex((e=>t===e));if(0===e)return!1;let n;for(let t=e;t>=0;t--){const e=this.members[t];if(!1!==e.isPresent){n=e;break}}return!!n&&(this.promote(n),!0)}promote(t,e){const n=this.lead;if(t!==n&&(this.prevLead=n,this.lead=t,t.show(),n)){n.instance&&n.scheduleRender(),t.scheduleRender(),t.resumeFrom=n,e&&(t.resumeFrom.preserveOpacity=!0),n.snapshot&&(t.snapshot=n.snapshot,t.snapshot.latestValues=n.animationValues||n.latestValues),t.root&&t.root.isUpdating&&(t.isLayoutDirty=!0);const{crossfade:s}=t.options;!1===s&&n.hide()}}exitAnimationComplete(){this.members.forEach((t=>{const{options:e,resumingFrom:n}=t;e.onExitComplete&&e.onExitComplete(),n&&n.options.onExitComplete&&n.options.onExitComplete()}))}scheduleRender(){this.members.forEach((t=>{t.instance&&t.scheduleRender(!1)}))}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}function Mi(t,e,n){let s=\"\";const i=t.x.translate/e.x,o=t.y.translate/e.y;if((i||o)&&(s=`translate3d(${i}px, ${o}px, 0) `),1===e.x&&1===e.y||(s+=`scale(${1/e.x}, ${1/e.y}) `),n){const{rotate:t,rotateX:e,rotateY:i}=n;t&&(s+=`rotate(${t}deg) `),e&&(s+=`rotateX(${e}deg) `),i&&(s+=`rotateY(${i}deg) `)}const r=t.x.scale*e.x,a=t.y.scale*e.y;return 1===r&&1===a||(s+=`scale(${r}, ${a})`),s||\"none\"}const Di=(t,e)=>t.depth-e.depth;class ki{constructor(){this.children=[],this.isDirty=!1}add(t){h(this.children,t),this.isDirty=!0}remove(t){d(this.children,t),this.isDirty=!0}forEach(t){this.isDirty&&this.children.sort(Di),this.isDirty=!1,this.children.forEach(t)}}const Ri=[\"\",\"X\",\"Y\",\"Z\"];let Li=0;const ji={type:\"projectionFrame\",totalNodes:0,resolvedTargetDeltas:0,recalculatedProjection:0};function Bi({attachResizeListener:t,defaultParent:e,measureScroll:n,checkIsScrollRoot:s,resetTransform:i}){return class{constructor(t={},n=(null==e?void 0:e())){this.id=Li++,this.animationId=0,this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isProjectionDirty=!1,this.isSharedProjectionDirty=!1,this.isTransformDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.hasTreeAnimated=!1,this.updateScheduled=!1,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{var t;ji.totalNodes=ji.resolvedTargetDeltas=ji.recalculatedProjection=0,this.nodes.forEach(Ii),this.nodes.forEach(Yi),this.nodes.forEach(Xi),this.nodes.forEach(Ui),t=ji,window.MotionDebug&&window.MotionDebug.record(t)},this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.latestValues=t,this.root=n?n.root||n:this,this.path=n?[...n.path,n]:[],this.parent=n,this.depth=n?n.depth+1:0;for(let t=0;t<this.path.length;t++)this.path[t].shouldResetTransform=!0;this.root===this&&(this.nodes=new ki)}addEventListener(t,e){return this.eventHandlers.has(t)||this.eventHandlers.set(t,new m),this.eventHandlers.get(t).add(e)}notifyListeners(t,...e){const n=this.eventHandlers.get(t);n&&n.notify(...e)}hasListeners(t){return this.eventHandlers.has(t)}mount(e,n=this.root.hasTreeAnimated){if(this.instance)return;var s;this.isSVG=(s=e)instanceof SVGElement&&\"svg\"!==s.tagName,this.instance=e;const{layoutId:i,layout:o,visualElement:r}=this.options;if(r&&!r.current&&r.mount(e),this.root.nodes.add(this),this.parent&&this.parent.children.add(this),n&&(o||i)&&(this.isLayoutDirty=!0),t){let n;const s=()=>this.root.updateBlockedByResize=!1;t(e,(()=>{this.root.updateBlockedByResize=!0,n&&n(),n=function(t,e){const n=performance.now(),s=({timestamp:e})=>{const i=e-n;i>=250&&(v(s),t(i-250))};return y.read(s,!0),()=>v(s)}(s),ni.hasAnimatedSinceResize&&(ni.hasAnimatedSinceResize=!1,this.nodes.forEach(zi))}))}i&&this.root.registerSharedNode(i,this),!1!==this.options.animate&&r&&(i||o)&&this.addEventListener(\"didUpdate\",(({delta:t,hasLayoutChanged:e,hasRelativeTargetChanged:n,layout:s})=>{if(this.isTreeAnimationBlocked())return this.target=void 0,void(this.relativeTarget=void 0);const i=this.options.transition||r.getDefaultTransition()||Ji,{onLayoutAnimationStart:o,onLayoutAnimationComplete:a}=r.getProps(),l=!this.targetLayout||!Ai(this.targetLayout,s)||n,u=!e&&n;if(this.options.layoutRoot||this.resumeFrom&&this.resumeFrom.instance||u||e&&(l||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0),this.setAnimationOrigin(t,u);const e={...Re(i,\"layout\"),onPlay:o,onComplete:a};(r.shouldReduceMotion||this.options.layoutRoot)&&(e.delay=0,e.type=!1),this.startAnimation(e)}else e||zi(this),this.isLead()&&this.options.onExitComplete&&this.options.onExitComplete();this.targetLayout=s}))}unmount(){this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this);const t=this.getStack();t&&t.remove(this),this.parent&&this.parent.children.delete(this),this.instance=void 0,v(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){return this.isAnimationBlocked||this.parent&&this.parent.isTreeAnimationBlocked()||!1}startUpdate(){this.isUpdateBlocked()||(this.isUpdating=!0,this.nodes&&this.nodes.forEach(Gi),this.animationId++)}getTransformTemplate(){const{visualElement:t}=this.options;return t&&t.getProps().transformTemplate}willUpdate(t=!0){if(this.root.hasTreeAnimated=!0,this.root.isUpdateBlocked())return void(this.options.onExitComplete&&this.options.onExitComplete());if(!this.root.isUpdating&&this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let t=0;t<this.path.length;t++){const e=this.path[t];e.shouldResetTransform=!0,e.updateScroll(\"snapshot\"),e.options.layoutRoot&&e.willUpdate(!1)}const{layoutId:e,layout:n}=this.options;if(void 0===e&&!n)return;const s=this.getTransformTemplate();this.prevTransformTemplateValue=s?s(this.latestValues,\"\"):void 0,this.updateSnapshot(),t&&this.notifyListeners(\"willUpdate\")}update(){if(this.updateScheduled=!1,this.isUpdateBlocked())return this.unblockUpdate(),this.clearAllSnapshots(),void this.nodes.forEach($i);this.isUpdating||this.nodes.forEach(Wi),this.isUpdating=!1,this.nodes.forEach(Hi),this.nodes.forEach(Fi),this.nodes.forEach(Oi),this.clearAllSnapshots();const t=performance.now();x.delta=R(0,1e3/60,t-x.timestamp),x.timestamp=t,x.isProcessing=!0,P.update.process(x),P.preRender.process(x),P.render.process(x),x.isProcessing=!1}didUpdate(){this.updateScheduled||(this.updateScheduled=!0,queueMicrotask((()=>this.update())))}clearAllSnapshots(){this.nodes.forEach(Ni),this.sharedNodes.forEach(qi)}scheduleUpdateProjection(){y.preRender(this.updateProjection,!1,!0)}scheduleCheckAfterUnmount(){y.postRender((()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()}))}updateSnapshot(){!this.snapshot&&this.instance&&(this.snapshot=this.measure())}updateLayout(){if(!this.instance)return;if(this.updateScroll(),!(this.options.alwaysMeasureLayout&&this.isLead()||this.isLayoutDirty))return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let t=0;t<this.path.length;t++)this.path[t].updateScroll();const t=this.layout;this.layout=this.measure(!1),this.layoutCorrected={x:{min:0,max:0},y:{min:0,max:0}},this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners(\"measure\",this.layout.layoutBox);const{visualElement:e}=this.options;e&&e.notify(\"LayoutMeasure\",this.layout.layoutBox,t?t.layoutBox:void 0)}updateScroll(t=\"measure\"){let e=Boolean(this.options.layoutScroll&&this.instance);this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===t&&(e=!1),e&&(this.scroll={animationId:this.root.animationId,phase:t,isRoot:s(this.instance),offset:n(this.instance)})}resetTransform(){if(!i)return;const t=this.isLayoutDirty||this.shouldResetTransform,e=this.projectionDelta&&!Ei(this.projectionDelta),n=this.getTransformTemplate(),s=n?n(this.latestValues,\"\"):void 0,o=s!==this.prevTransformTemplateValue;t&&(e||Is(this.latestValues)||o)&&(i(this.instance,s),this.shouldResetTransform=!1,this.scheduleRender())}measure(t=!0){const e=this.measurePageBox();let n=this.removeElementScroll(e);var s;return t&&(n=this.removeTransform(n)),eo((s=n).x),eo(s.y),{animationId:this.root.animationId,measuredBox:e,layoutBox:n,latestValues:{},source:this.id}}measurePageBox(){const{visualElement:t}=this.options;if(!t)return{x:{min:0,max:0},y:{min:0,max:0}};const e=t.measureViewportBox(),{scroll:n}=this.root;return n&&(Xs(e.x,n.offset.x),Xs(e.y,n.offset.y)),e}removeElementScroll(t){const e={x:{min:0,max:0},y:{min:0,max:0}};vi(e,t);for(let n=0;n<this.path.length;n++){const s=this.path[n],{scroll:i,options:o}=s;if(s!==this.root&&i&&o.layoutScroll){if(i.isRoot){vi(e,t);const{scroll:n}=this.root;n&&(Xs(e.x,-n.offset.x),Xs(e.y,-n.offset.y))}Xs(e.x,i.offset.x),Xs(e.y,i.offset.y)}}return e}applyTransform(t,e=!1){const n={x:{min:0,max:0},y:{min:0,max:0}};vi(n,t);for(let t=0;t<this.path.length;t++){const s=this.path[t];!e&&s.options.layoutScroll&&s.scroll&&s!==s.root&&Ks(n,{x:-s.scroll.offset.x,y:-s.scroll.offset.y}),Is(s.latestValues)&&Ks(n,s.latestValues)}return Is(this.latestValues)&&Ks(n,this.latestValues),n}removeTransform(t){const e={x:{min:0,max:0},y:{min:0,max:0}};vi(e,t);for(let t=0;t<this.path.length;t++){const n=this.path[t];if(!n.instance)continue;if(!Is(n.latestValues))continue;Os(n.latestValues)&&n.updateSnapshot();const s={x:{min:0,max:0},y:{min:0,max:0}};vi(s,n.measurePageBox()),Si(e,n.latestValues,n.snapshot?n.snapshot.layoutBox:void 0,s)}return Is(this.latestValues)&&Si(e,this.latestValues),e}setTargetDelta(t){this.targetDelta=t,this.root.scheduleUpdateProjection(),this.isProjectionDirty=!0}setOptions(t){this.options={...this.options,...t,crossfade:void 0===t.crossfade||t.crossfade}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}forceRelativeParentToResolveTarget(){this.relativeParent&&this.relativeParent.resolvedRelativeTargetAt!==x.timestamp&&this.relativeParent.resolveTargetDelta(!0)}resolveTargetDelta(t=!1){var e;const n=this.getLead();this.isProjectionDirty||(this.isProjectionDirty=n.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=n.isTransformDirty),this.isSharedProjectionDirty||(this.isSharedProjectionDirty=n.isSharedProjectionDirty);const s=Boolean(this.resumingFrom)||this!==n;if(!(t||s&&this.isSharedProjectionDirty||this.isProjectionDirty||(null===(e=this.parent)||void 0===e?void 0:e.isProjectionDirty)||this.attemptToResolveRelativeTarget))return;const{layout:i,layoutId:o}=this.options;if(this.layout&&(i||o)){if(this.resolvedRelativeTargetAt=x.timestamp,!this.targetDelta&&!this.relativeTarget){const t=this.getClosestProjectingParent();t&&t.layout&&1!==this.animationProgress?(this.relativeParent=t,this.forceRelativeParentToResolveTarget(),this.relativeTarget={x:{min:0,max:0},y:{min:0,max:0}},this.relativeTargetOrigin={x:{min:0,max:0},y:{min:0,max:0}},Cs(this.relativeTargetOrigin,this.layout.layoutBox,t.layout.layoutBox),vi(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(this.relativeTarget||this.targetDelta){var r,a,l;if(this.target||(this.target={x:{min:0,max:0},y:{min:0,max:0}},this.targetWithTransforms={x:{min:0,max:0},y:{min:0,max:0}}),this.relativeTarget&&this.relativeTargetOrigin&&this.relativeParent&&this.relativeParent.target?(this.forceRelativeParentToResolveTarget(),r=this.target,a=this.relativeTarget,l=this.relativeParent.target,As(r.x,a.x,l.x),As(r.y,a.y,l.y)):this.targetDelta?(Boolean(this.resumingFrom)?this.target=this.applyTransform(this.layout.layoutBox):vi(this.target,this.layout.layoutBox),zs(this.target,this.targetDelta)):vi(this.target,this.layout.layoutBox),this.attemptToResolveRelativeTarget){this.attemptToResolveRelativeTarget=!1;const t=this.getClosestProjectingParent();t&&Boolean(t.resumingFrom)===Boolean(this.resumingFrom)&&!t.options.layoutScroll&&t.target&&1!==this.animationProgress?(this.relativeParent=t,this.forceRelativeParentToResolveTarget(),this.relativeTarget={x:{min:0,max:0},y:{min:0,max:0}},this.relativeTargetOrigin={x:{min:0,max:0},y:{min:0,max:0}},Cs(this.relativeTargetOrigin,this.target,t.target),vi(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}ji.resolvedTargetDeltas++}}}getClosestProjectingParent(){if(this.parent&&!Os(this.parent.latestValues)&&!Us(this.parent.latestValues))return this.parent.isProjecting()?this.parent:this.parent.getClosestProjectingParent()}isProjecting(){return Boolean((this.relativeTarget||this.targetDelta||this.options.layoutRoot)&&this.layout)}calcProjection(){var t;const e=this.getLead(),n=Boolean(this.resumingFrom)||this!==e;let s=!0;if((this.isProjectionDirty||(null===(t=this.parent)||void 0===t?void 0:t.isProjectionDirty))&&(s=!1),n&&(this.isSharedProjectionDirty||this.isTransformDirty)&&(s=!1),this.resolvedRelativeTargetAt===x.timestamp&&(s=!1),s)return;const{layout:i,layoutId:o}=this.options;if(this.isTreeAnimating=Boolean(this.parent&&this.parent.isTreeAnimating||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!i&&!o)return;vi(this.layoutCorrected,this.layout.layoutBox);const r=this.treeScale.x,a=this.treeScale.y;!function(t,e,n,s=!1){const i=n.length;if(!i)return;let o,r;e.x=e.y=1;for(let a=0;a<i;a++){o=n[a],r=o.projectionDelta;const i=o.instance;i&&i.style&&\"contents\"===i.style.display||(s&&o.options.layoutScroll&&o.scroll&&o!==o.root&&Ks(t,{x:-o.scroll.offset.x,y:-o.scroll.offset.y}),r&&(e.x*=r.x.scale,e.y*=r.y.scale,zs(t,r)),s&&Is(o.latestValues)&&Ks(t,o.latestValues))}e.x=Ys(e.x),e.y=Ys(e.y)}(this.layoutCorrected,this.treeScale,this.path,n),!e.layout||e.target||1===this.treeScale.x&&1===this.treeScale.y||(e.target=e.layout.layoutBox);const{target:l}=e;if(!l)return void(this.projectionTransform&&(this.projectionDelta={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}},this.projectionTransform=\"none\",this.scheduleRender()));this.projectionDelta||(this.projectionDelta={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}},this.projectionDeltaWithTransform={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}});const u=this.projectionTransform;Es(this.projectionDelta,this.layoutCorrected,l,this.latestValues),this.projectionTransform=Mi(this.projectionDelta,this.treeScale),this.projectionTransform===u&&this.treeScale.x===r&&this.treeScale.y===a||(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners(\"projectionUpdate\",l)),ji.recalculatedProjection++}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(t=!0){if(this.options.scheduleRender&&this.options.scheduleRender(),t){const t=this.getStack();t&&t.scheduleRender()}this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}setAnimationOrigin(t,e=!1){const n=this.snapshot,s=n?n.latestValues:{},i={...this.latestValues},o={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};this.relativeParent&&this.relativeParent.options.layoutRoot||(this.relativeTarget=this.relativeTargetOrigin=void 0),this.attemptToResolveRelativeTarget=!e;const r={x:{min:0,max:0},y:{min:0,max:0}},a=(n?n.source:void 0)!==(this.layout?this.layout.source:void 0),l=this.getStack(),u=!l||l.members.length<=1,c=Boolean(a&&!u&&!0===this.options.crossfade&&!this.path.some(_i));let h;this.animationProgress=0,this.mixTargetDelta=e=>{const n=e/1e3;var l,d,m,p,f,g;Zi(o.x,t.x,n),Zi(o.y,t.y,n),this.setTargetDelta(o),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&this.relativeParent&&this.relativeParent.layout&&(Cs(r,this.layout.layoutBox,this.relativeParent.layout.layoutBox),m=this.relativeTarget,p=this.relativeTargetOrigin,f=r,g=n,Ki(m.x,p.x,f.x,g),Ki(m.y,p.y,f.y,g),h&&(l=this.relativeTarget,d=h,l.x.min===d.x.min&&l.x.max===d.x.max&&l.y.min===d.y.min&&l.y.max===d.y.max)&&(this.isProjectionDirty=!1),h||(h={x:{min:0,max:0},y:{min:0,max:0}}),vi(h,this.relativeTarget)),a&&(this.animationValues=i,function(t,e,n,s,i,o){i?(t.opacity=Kt(0,void 0!==n.opacity?n.opacity:1,pi(s)),t.opacityExit=Kt(void 0!==e.opacity?e.opacity:1,0,fi(s))):o&&(t.opacity=Kt(void 0!==e.opacity?e.opacity:1,void 0!==n.opacity?n.opacity:1,s));for(let i=0;i<ci;i++){const o=`border${ui[i]}Radius`;let r=mi(e,o),a=mi(n,o);void 0===r&&void 0===a||(r||(r=0),a||(a=0),0===r||0===a||di(r)===di(a)?(t[o]=Math.max(Kt(hi(r),hi(a),s),0),(H.test(a)||H.test(r))&&(t[o]+=\"%\")):t[o]=a)}(e.rotate||n.rotate)&&(t.rotate=Kt(e.rotate||0,n.rotate||0,s))}(i,s,this.latestValues,n,c,u)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=n},this.mixTargetDelta(this.options.layoutRoot?1e3:0)}startAnimation(t){this.notifyListeners(\"animationStart\"),this.currentAnimation&&this.currentAnimation.stop(),this.resumingFrom&&this.resumingFrom.currentAnimation&&this.resumingFrom.currentAnimation.stop(),this.pendingAnimation&&(v(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=y.update((()=>{ni.hasAnimatedSinceResize=!0,this.currentAnimation=function(t,e,n){const s=je(0)?0:S(0);return s.start(Le(\"\",s,1e3,n)),s.animation}(0,0,{...t,onUpdate:e=>{this.mixTargetDelta(e),t.onUpdate&&t.onUpdate(e)},onComplete:()=>{t.onComplete&&t.onComplete(),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0}))}completeAnimation(){this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0);const t=this.getStack();t&&t.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners(\"animationComplete\")}finishAnimation(){this.currentAnimation&&(this.mixTargetDelta&&this.mixTargetDelta(1e3),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){const t=this.getLead();let{targetWithTransforms:e,target:n,layout:s,latestValues:i}=t;if(e&&n&&s){if(this!==t&&this.layout&&s&&no(this.options.animationType,this.layout.layoutBox,s.layoutBox)){n=this.target||{x:{min:0,max:0},y:{min:0,max:0}};const e=Ts(this.layout.layoutBox.x);n.x.min=t.target.x.min,n.x.max=n.x.min+e;const s=Ts(this.layout.layoutBox.y);n.y.min=t.target.y.min,n.y.max=n.y.min+s}vi(e,n),Ks(e,i),Es(this.projectionDeltaWithTransform,this.layoutCorrected,e,i)}}registerSharedNode(t,e){this.sharedNodes.has(t)||this.sharedNodes.set(t,new Ci),this.sharedNodes.get(t).add(e);const n=e.options.initialPromotionConfig;e.promote({transition:n?n.transition:void 0,preserveFollowOpacity:n&&n.shouldPreserveFollowOpacity?n.shouldPreserveFollowOpacity(e):void 0})}isLead(){const t=this.getStack();return!t||t.lead===this}getLead(){var t;const{layoutId:e}=this.options;return e&&(null===(t=this.getStack())||void 0===t?void 0:t.lead)||this}getPrevLead(){var t;const{layoutId:e}=this.options;return e?null===(t=this.getStack())||void 0===t?void 0:t.prevLead:void 0}getStack(){const{layoutId:t}=this.options;if(t)return this.root.sharedNodes.get(t)}promote({needsReset:t,transition:e,preserveFollowOpacity:n}={}){const s=this.getStack();s&&s.promote(this,n),t&&(this.projectionDelta=void 0,this.needsReset=!0),e&&this.setOptions({transition:e})}relegate(){const t=this.getStack();return!!t&&t.relegate(this)}resetRotation(){const{visualElement:t}=this.options;if(!t)return;let e=!1;const{latestValues:n}=t;if((n.rotate||n.rotateX||n.rotateY||n.rotateZ)&&(e=!0),!e)return;const s={};for(let e=0;e<Ri.length;e++){const i=\"rotate\"+Ri[e];n[i]&&(s[i]=n[i],t.setStaticValue(i,0))}t.render();for(const e in s)t.setStaticValue(e,s[e]);t.scheduleRender()}getProjectionStyles(t={}){var e,n;const s={};if(!this.instance||this.isSVG)return s;if(!this.isVisible)return{visibility:\"hidden\"};s.visibility=\"\";const i=this.getTransformTemplate();if(this.needsReset)return this.needsReset=!1,s.opacity=\"\",s.pointerEvents=In(t.pointerEvents)||\"\",s.transform=i?i(this.latestValues,\"\"):\"none\",s;const o=this.getLead();if(!this.projectionDelta||!this.layout||!o.target){const e={};return this.options.layoutId&&(e.opacity=void 0!==this.latestValues.opacity?this.latestValues.opacity:1,e.pointerEvents=In(t.pointerEvents)||\"\"),this.hasProjected&&!Is(this.latestValues)&&(e.transform=i?i({},\"\"):\"none\",this.hasProjected=!1),e}const r=o.animationValues||o.latestValues;this.applyTransformsToTarget(),s.transform=Mi(this.projectionDeltaWithTransform,this.treeScale,r),i&&(s.transform=i(r,s.transform));const{x:a,y:l}=this.projectionDelta;s.transformOrigin=`${100*a.origin}% ${100*l.origin}% 0`,o.animationValues?s.opacity=o===this?null!==(n=null!==(e=r.opacity)&&void 0!==e?e:this.latestValues.opacity)&&void 0!==n?n:1:this.preserveOpacity?this.latestValues.opacity:r.opacityExit:s.opacity=o===this?void 0!==r.opacity?r.opacity:\"\":void 0!==r.opacityExit?r.opacityExit:0;for(const t in pn){if(void 0===r[t])continue;const{correct:e,applyTo:n}=pn[t],i=\"none\"===s.transform?r[t]:e(r[t],o);if(n){const t=n.length;for(let e=0;e<t;e++)s[n[e]]=i}else s[t]=i}return this.options.layoutId&&(s.pointerEvents=o===this?In(t.pointerEvents)||\"\":\"none\"),s}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach((t=>{var e;return null===(e=t.currentAnimation)||void 0===e?void 0:e.stop()})),this.root.nodes.forEach($i),this.root.sharedNodes.clear()}}}function Fi(t){t.updateLayout()}function Oi(t){var e;const n=(null===(e=t.resumeFrom)||void 0===e?void 0:e.snapshot)||t.snapshot;if(t.isLead()&&t.layout&&n&&t.hasListeners(\"didUpdate\")){const{layoutBox:e,measuredBox:s}=t.layout,{animationType:i}=t.options,o=n.source!==t.layout.source;\"size\"===i?js((t=>{const s=o?n.measuredBox[t]:n.layoutBox[t],i=Ts(s);s.min=e[t].min,s.max=s.min+i})):no(i,n.layoutBox,e)&&js((s=>{const i=o?n.measuredBox[s]:n.layoutBox[s],r=Ts(e[s]);i.max=i.min+r,t.relativeTarget&&!t.currentAnimation&&(t.isProjectionDirty=!0,t.relativeTarget[s].max=t.relativeTarget[s].min+r)}));const r={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};Es(r,e,n.layoutBox);const a={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};o?Es(a,t.applyTransform(s,!0),n.measuredBox):Es(a,e,n.layoutBox);const l=!Ei(r);let u=!1;if(!t.resumeFrom){const s=t.getClosestProjectingParent();if(s&&!s.resumeFrom){const{snapshot:i,layout:o}=s;if(i&&o){const r={x:{min:0,max:0},y:{min:0,max:0}};Cs(r,n.layoutBox,i.layoutBox);const a={x:{min:0,max:0},y:{min:0,max:0}};Cs(a,e,o.layoutBox),Ai(r,a)||(u=!0),s.options.layoutRoot&&(t.relativeTarget=a,t.relativeTargetOrigin=r,t.relativeParent=s)}}}t.notifyListeners(\"didUpdate\",{layout:e,snapshot:n,delta:a,layoutDelta:r,hasLayoutChanged:l,hasRelativeTargetChanged:u})}else if(t.isLead()){const{onExitComplete:e}=t.options;e&&e()}t.options.transition=void 0}function Ii(t){ji.totalNodes++,t.parent&&(t.isProjecting()||(t.isProjectionDirty=t.parent.isProjectionDirty),t.isSharedProjectionDirty||(t.isSharedProjectionDirty=Boolean(t.isProjectionDirty||t.parent.isProjectionDirty||t.parent.isSharedProjectionDirty)),t.isTransformDirty||(t.isTransformDirty=t.parent.isTransformDirty))}function Ui(t){t.isProjectionDirty=t.isSharedProjectionDirty=t.isTransformDirty=!1}function Ni(t){t.clearSnapshot()}function $i(t){t.clearMeasurements()}function Wi(t){t.isLayoutDirty=!1}function Hi(t){const{visualElement:e}=t.options;e&&e.getProps().onBeforeLayoutMeasure&&e.notify(\"BeforeLayoutMeasure\"),t.resetTransform()}function zi(t){t.finishAnimation(),t.targetDelta=t.relativeTarget=t.target=void 0,t.isProjectionDirty=!0}function Yi(t){t.resolveTargetDelta()}function Xi(t){t.calcProjection()}function Gi(t){t.resetRotation()}function qi(t){t.removeLeadSnapshot()}function Zi(t,e,n){t.translate=Kt(e.translate,0,n),t.scale=Kt(e.scale,1,n),t.origin=e.origin,t.originPoint=e.originPoint}function Ki(t,e,n,s){t.min=Kt(e.min,n.min,s),t.max=Kt(e.max,n.max,s)}function _i(t){return t.animationValues&&void 0!==t.animationValues.opacityExit}const Ji={duration:.45,ease:[.4,0,.1,1]},Qi=t=>\"undefined\"!=typeof navigator&&navigator.userAgent.toLowerCase().includes(t),to=Qi(\"applewebkit/\")&&!Qi(\"chrome/\")?Math.round:n;function eo(t){t.min=to(t.min),t.max=to(t.max)}function no(t,e,n){return\"position\"===t||\"preserve-aspect\"===t&&!Ss(Vi(e),Vi(n),.2)}const so=Bi({attachResizeListener:(t,e)=>Hn(t,\"resize\",e),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),io={current:void 0},oo=Bi({measureScroll:t=>({x:t.scrollLeft,y:t.scrollTop}),defaultParent:()=>{if(!io.current){const t=new so({});t.mount(window),t.setOptions({layoutScroll:!0}),io.current=t}return io.current},resetTransform:(t,e)=>{t.style.transform=void 0!==e?e:\"none\"},checkIsScrollRoot:t=>Boolean(\"fixed\"===window.getComputedStyle(t).position)}),ro={pan:{Feature:class extends Jn{constructor(){super(...arguments),this.removePointerDownListener=n}onPointerDown(t){this.session=new fs(t,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint()})}createPanHandlers(){const{onPanSessionStart:t,onPanStart:e,onPan:n,onPanEnd:s}=this.node.getProps();return{onSessionStart:ei(t),onStart:ei(e),onMove:n,onEnd:(t,e)=>{delete this.session,s&&y.update((()=>s(t,e)))}}}mount(){this.removePointerDownListener=Xn(this.node.current,\"pointerdown\",(t=>this.onPointerDown(t)))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}},drag:{Feature:class extends Jn{constructor(t){super(t),this.removeGroupControls=n,this.removeListeners=n,this.controls=new Qs(t)}mount(){const{dragControls:t}=this.node.getProps();t&&(this.removeGroupControls=t.subscribe(this.controls)),this.removeListeners=this.controls.addListeners()||n}unmount(){this.removeGroupControls(),this.removeListeners()}},ProjectionNode:oo,MeasureLayout:ai}},ao=/var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;function lo(t,e,n=1){r(n<=4,`Max CSS variable fallback depth detected in property \"${t}\". This may indicate a circular fallback dependency.`);const[s,i]=function(t){const e=ao.exec(t);if(!e)return[,];const[,n,s]=e;return[n,s]}(t);if(!s)return;const o=window.getComputedStyle(e).getPropertyValue(s);if(o){const t=o.trim();return l(t)?parseFloat(t):t}return A(i)?lo(i,e,n+1):i}const uo=new Set([\"width\",\"height\",\"top\",\"left\",\"right\",\"bottom\",\"x\",\"y\",\"translateX\",\"translateY\"]),co=t=>uo.has(t),ho=t=>t===L||t===z,mo=(t,e)=>parseFloat(t.split(\", \")[e]),po=(t,e)=>(n,{transform:s})=>{if(\"none\"===s||!s)return 0;const i=s.match(/^matrix3d\\((.+)\\)$/);if(i)return mo(i[1],e);{const e=s.match(/^matrix\\((.+)\\)$/);return e?mo(e[1],t):0}},fo=new Set([\"x\",\"y\",\"z\"]),go=wt.filter((t=>!fo.has(t))),yo={width:({x:t},{paddingLeft:e=\"0\",paddingRight:n=\"0\"})=>t.max-t.min-parseFloat(e)-parseFloat(n),height:({y:t},{paddingTop:e=\"0\",paddingBottom:n=\"0\"})=>t.max-t.min-parseFloat(e)-parseFloat(n),top:(t,{top:e})=>parseFloat(e),left:(t,{left:e})=>parseFloat(e),bottom:({y:t},{top:e})=>parseFloat(e)+(t.max-t.min),right:({x:t},{left:e})=>parseFloat(e)+(t.max-t.min),x:po(4,13),y:po(5,14)};yo.translateX=yo.x,yo.translateY=yo.y;function vo(t,e,n,s){return(t=>Object.keys(t).some(co))(e)?((t,e,n={},s={})=>{e={...e},s={...s};const i=Object.keys(e).filter(co);let o=[],a=!1;const l=[];if(i.forEach((i=>{const u=t.getValue(i);if(!t.hasValue(i))return;let h=n[i],d=gt(h);const m=e[i];let p;if(c(m)){const t=m.length,e=null===m[0]?1:0;h=m[e],d=gt(h);for(let n=e;n<t&&null!==m[n];n++)p?r(gt(m[n])===p,\"All keyframes must be of the same type\"):(p=gt(m[n]),r(p===d||ho(d)&&ho(p),\"Keyframes must be of the same dimension as the current value\"))}else p=gt(m);if(d!==p)if(ho(d)&&ho(p)){const t=u.get();\"string\"==typeof t&&u.set(parseFloat(t)),\"string\"==typeof m?e[i]=parseFloat(m):Array.isArray(m)&&p===z&&(e[i]=m.map(parseFloat))}else(null==d?void 0:d.transform)&&(null==p?void 0:p.transform)&&(0===h||0===m)?0===h?u.set(p.transform(h)):e[i]=d.transform(m):(a||(o=function(t){const e=[];return go.forEach((n=>{const s=t.getValue(n);void 0!==s&&(e.push([n,s.get()]),s.set(n.startsWith(\"scale\")?1:0))})),e.length&&t.render(),e}(t),a=!0),l.push(i),s[i]=void 0!==s[i]?s[i]:e[i],u.jump(m))})),l.length){const n=l.indexOf(\"height\")>=0?window.pageYOffset:null,i=((t,e,n)=>{const s=e.measureViewportBox(),i=e.current,o=getComputedStyle(i),{display:r}=o,a={};\"none\"===r&&e.setStaticValue(\"display\",t.display||\"block\"),n.forEach((t=>{a[t]=yo[t](s,o)})),e.render();const l=e.measureViewportBox();return n.forEach((n=>{const s=e.getValue(n);s&&s.jump(a[n]),t[n]=yo[n](l,o)})),t})(e,t,l);return o.length&&o.forEach((([e,n])=>{t.getValue(e).set(n)})),t.render(),He&&null!==n&&window.scrollTo({top:n}),{target:i,transitionEnd:s}}return{target:e,transitionEnd:s}})(t,e,n,s):{target:e,transitionEnd:s}}const xo={current:null},Po={current:!1},bo=new WeakMap,To=Object.keys(on),So=To.length,wo=[\"AnimationStart\",\"AnimationComplete\",\"Update\",\"BeforeLayoutMeasure\",\"LayoutMeasure\",\"LayoutAnimationStart\",\"LayoutAnimationComplete\"],Eo=Qe.length;class Ao extends class{constructor({parent:t,props:e,presenceContext:n,reducedMotionConfig:s,visualState:i},o={}){this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.features={},this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify(\"Update\",this.latestValues),this.render=()=>{this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.scheduleRender=()=>y.render(this.render,!1,!0);const{latestValues:r,renderState:a}=i;this.latestValues=r,this.baseTarget={...r},this.initialValues=e.initial?{...r}:{},this.renderState=a,this.parent=t,this.props=e,this.presenceContext=n,this.depth=t?t.depth+1:0,this.reducedMotionConfig=s,this.options=o,this.isControllingVariants=tn(e),this.isVariantNode=en(e),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=Boolean(t&&t.current);const{willChange:l,...u}=this.scrapeMotionValuesFromProps(e,{});for(const t in u){const e=u[t];void 0!==r[t]&&je(e)&&(e.set(r[t],!1),Be(l)&&l.add(t))}}scrapeMotionValuesFromProps(t,e){return{}}mount(t){this.current=t,bo.set(t,this),this.projection&&!this.projection.instance&&this.projection.mount(t),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach(((t,e)=>this.bindToMotionValue(e,t))),Po.current||function(){if(Po.current=!0,He)if(window.matchMedia){const t=window.matchMedia(\"(prefers-reduced-motion)\"),e=()=>xo.current=t.matches;t.addListener(e),e()}else xo.current=!1}(),this.shouldReduceMotion=\"never\"!==this.reducedMotionConfig&&(\"always\"===this.reducedMotionConfig||xo.current),this.parent&&this.parent.children.add(this),this.update(this.props,this.presenceContext)}unmount(){bo.delete(this.current),this.projection&&this.projection.unmount(),v(this.notifyUpdate),v(this.render),this.valueSubscriptions.forEach((t=>t())),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent&&this.parent.children.delete(this);for(const t in this.events)this.events[t].clear();for(const t in this.features)this.features[t].unmount();this.current=null}bindToMotionValue(t,e){const n=Et.has(t),s=e.on(\"change\",(e=>{this.latestValues[t]=e,this.props.onUpdate&&y.update(this.notifyUpdate,!1,!0),n&&this.projection&&(this.projection.isTransformDirty=!0)})),i=e.on(\"renderRequest\",this.scheduleRender);this.valueSubscriptions.set(t,(()=>{s(),i()}))}sortNodePosition(t){return this.current&&this.sortInstanceNodePosition&&this.type===t.type?this.sortInstanceNodePosition(this.current,t.current):0}loadFeatures({children:t,...e},n,s,i){let o,r;for(let t=0;t<So;t++){const n=To[t],{isEnabled:s,Feature:i,ProjectionNode:a,MeasureLayout:l}=on[n];a&&(o=a),s(e)&&(!this.features[n]&&i&&(this.features[n]=new i(this)),l&&(r=l))}if(!this.projection&&o){this.projection=new o(this.latestValues,this.parent&&this.parent.projection);const{layoutId:t,layout:n,drag:s,dragConstraints:r,layoutScroll:a,layoutRoot:l}=e;this.projection.setOptions({layoutId:t,layout:n,alwaysMeasureLayout:Boolean(s)||r&&Ze(r),visualElement:this,scheduleRender:()=>this.scheduleRender(),animationType:\"string\"==typeof n?n:\"both\",initialPromotionConfig:i,layoutScroll:a,layoutRoot:l})}return r}updateFeatures(){for(const t in this.features){const e=this.features[t];e.isMounted?e.update():(e.mount(),e.isMounted=!0)}}triggerBuild(){this.build(this.renderState,this.latestValues,this.options,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):{x:{min:0,max:0},y:{min:0,max:0}}}getStaticValue(t){return this.latestValues[t]}setStaticValue(t,e){this.latestValues[t]=e}makeTargetAnimatable(t,e=!0){return this.makeTargetAnimatableFromInstance(t,this.props,e)}update(t,e){(t.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=t,this.prevPresenceContext=this.presenceContext,this.presenceContext=e;for(let e=0;e<wo.length;e++){const n=wo[e];this.propEventSubscriptions[n]&&(this.propEventSubscriptions[n](),delete this.propEventSubscriptions[n]);const s=t[\"on\"+n];s&&(this.propEventSubscriptions[n]=this.on(n,s))}this.prevMotionValues=function(t,e,n){const{willChange:s}=e;for(const i in e){const o=e[i],r=n[i];if(je(o))t.addValue(i,o),Be(s)&&s.add(i);else if(je(r))t.addValue(i,S(o,{owner:t})),Be(s)&&s.remove(i);else if(r!==o)if(t.hasValue(i)){const e=t.getValue(i);!e.hasAnimated&&e.set(o)}else{const e=t.getStaticValue(i);t.addValue(i,S(void 0!==e?e:o,{owner:t}))}}for(const s in n)void 0===e[s]&&t.removeValue(s);return e}(this,this.scrapeMotionValuesFromProps(t,this.prevProps),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue()}getProps(){return this.props}getVariant(t){return this.props.variants?this.props.variants[t]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}getVariantContext(t=!1){if(t)return this.parent?this.parent.getVariantContext():void 0;if(!this.isControllingVariants){const t=this.parent&&this.parent.getVariantContext()||{};return void 0!==this.props.initial&&(t.initial=this.props.initial),t}const e={};for(let t=0;t<Eo;t++){const n=Qe[t],s=this.props[n];(Ke(s)||!1===s)&&(e[n]=s)}return e}addVariantChild(t){const e=this.getClosestVariantNode();if(e)return e.variantChildren&&e.variantChildren.add(t),()=>e.variantChildren.delete(t)}addValue(t,e){e!==this.values.get(t)&&(this.removeValue(t),this.bindToMotionValue(t,e)),this.values.set(t,e),this.latestValues[t]=e.get()}removeValue(t){this.values.delete(t);const e=this.valueSubscriptions.get(t);e&&(e(),this.valueSubscriptions.delete(t)),delete this.latestValues[t],this.removeValueFromRenderState(t,this.renderState)}hasValue(t){return this.values.has(t)}getValue(t,e){if(this.props.values&&this.props.values[t])return this.props.values[t];let n=this.values.get(t);return void 0===n&&void 0!==e&&(n=S(e,{owner:this}),this.addValue(t,n)),n}readValue(t){var e;return void 0===this.latestValues[t]&&this.current?null!==(e=this.getBaseTargetFromProps(this.props,t))&&void 0!==e?e:this.readValueFromInstance(this.current,t,this.options):this.latestValues[t]}setBaseTarget(t,e){this.baseTarget[t]=e}getBaseTarget(t){var e;const{initial:n}=this.props,s=\"string\"==typeof n||\"object\"==typeof n?null===(e=vt(this.props,n))||void 0===e?void 0:e[t]:void 0;if(n&&void 0!==s)return s;const i=this.getBaseTargetFromProps(this.props,t);return void 0===i||je(i)?void 0!==this.initialValues[t]&&void 0===s?void 0:this.baseTarget[t]:i}on(t,e){return this.events[t]||(this.events[t]=new m),this.events[t].add(e)}notify(t,...e){this.events[t]&&this.events[t].notify(...e)}}{sortInstanceNodePosition(t,e){return 2&t.compareDocumentPosition(e)?1:-1}getBaseTargetFromProps(t,e){return t.style?t.style[e]:void 0}removeValueFromRenderState(t,{vars:e,style:n}){delete e[t],delete n[t]}makeTargetAnimatableFromInstance({transition:t,transitionEnd:e,...n},{transformValues:s},i){let o=function(t,e,n){const s={};for(const i in t){const t=St(i,e);if(void 0!==t)s[i]=t;else{const t=n.getValue(i);t&&(s[i]=t.get())}}return s}(n,t||{},this);if(s&&(e&&(e=s(e)),n&&(n=s(n)),o&&(o=s(o))),i){!function(t,e,n){var s,i;const o=Object.keys(e).filter((e=>!t.hasValue(e))),r=o.length;var a;if(r)for(let c=0;c<r;c++){const r=o[c],h=e[r];let d=null;Array.isArray(h)&&(d=h[0]),null===d&&(d=null!==(i=null!==(s=n[r])&&void 0!==s?s:t.readValue(r))&&void 0!==i?i:e[r]),null!=d&&(\"string\"==typeof d&&(l(d)||u(d))?d=parseFloat(d):(a=d,!yt.find(pt(a))&&it.test(h)&&(d=mt(r,h))),t.addValue(r,S(d,{owner:t})),void 0===n[r]&&(n[r]=d),null!==d&&t.setBaseTarget(r,d))}}(this,n,o);const t=((t,e,n,s)=>{const i=function(t,{...e},n){const s=t.current;if(!(s instanceof Element))return{target:e,transitionEnd:n};n&&(n={...n}),t.values.forEach((t=>{const e=t.get();if(!A(e))return;const n=lo(e,s);n&&t.set(n)}));for(const t in e){const i=e[t];if(!A(i))continue;const o=lo(i,s);o&&(e[t]=o,n||(n={}),void 0===n[t]&&(n[t]=i))}return{target:e,transitionEnd:n}}(t,e,s);return vo(t,e=i.target,n,s=i.transitionEnd)})(this,n,o,e);e=t.transitionEnd,n=t.target}return{transition:t,transitionEnd:e,...n}}}class Vo extends Ao{readValueFromInstance(t,e){if(Et.has(e)){const t=dt(e);return t&&t.default||0}{const s=(n=t,window.getComputedStyle(n)),i=(E(e)?s.getPropertyValue(e):s[e])||0;return\"string\"==typeof i?i.trim():i}var n}measureInstanceViewportBox(t,{transformPagePoint:e}){return _s(t,e)}build(t,e,n,s){xn(t,e,n,s.transformTemplate)}scrapeMotionValuesFromProps(t,e){return Fn(t,e)}handleChildMotionValue(){this.childSubscription&&(this.childSubscription(),delete this.childSubscription);const{children:t}=this.props;je(t)&&(this.childSubscription=t.on(\"change\",(t=>{this.current&&(this.current.textContent=`${t}`)})))}renderInstance(t,e,n,s){Ln(t,e,n,s)}}class Co extends Ao{constructor(){super(...arguments),this.isSVGTag=!1}getBaseTargetFromProps(t,e){return t[e]}readValueFromInstance(t,e){if(Et.has(e)){const t=dt(e);return t&&t.default||0}return e=jn.has(e)?e:At(e),t.getAttribute(e)}measureInstanceViewportBox(){return{x:{min:0,max:0},y:{min:0,max:0}}}scrapeMotionValuesFromProps(t,e){return On(t,e)}build(t,e,n,s){Mn(t,e,n,this.isSVGTag,s.transformTemplate)}renderInstance(t,e,n,s){Bn(t,e,0,s)}mount(t){this.isSVGTag=Dn(t.tagName),super.mount(t)}}const Mo=(t,e)=>mn(t)?new Co(e,{enableHardwareAcceleration:!1}):new Vo(e,{enableHardwareAcceleration:!0}),Do={...ms,...as,...ro,layout:{ProjectionNode:oo,MeasureLayout:ai}},ko=hn(((t,e)=>function(t,{forwardMotionProps:e=!1},n,s){return{...mn(t)?$n:Wn,preloadedFeatures:n,useRender:Rn(e),createVisualElement:s,Component:t}}(t,e,Do,Mo))),Ro=[0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9],Lo=({className:n,animateToNumber:s,fontStyle:i,transitions:o,includeComma:r,locale:l})=>{const u=e().useRef(null),c=function(e,{root:n,margin:s,amount:i,once:o=!1}={}){const[r,l]=(0,t.useState)(!1);return(0,t.useEffect)((()=>{if(!e.current||o&&r)return;const t={root:n&&n.current||void 0,margin:s,amount:i};return function(t,e,{root:n,margin:s,amount:i=\"some\"}={}){const o=function(t,e,n){if(\"string\"==typeof t){t=document.querySelectorAll(t)}else t instanceof Element&&(t=[t]);return Array.from(t||[])}(t),r=new WeakMap,l=new IntersectionObserver((t=>{t.forEach((t=>{const n=r.get(t.target);if(t.isIntersecting!==Boolean(n))if(t.isIntersecting){const n=e(t);\"function\"==typeof n?r.set(t.target,n):l.unobserve(t.target)}else n&&(n(t),r.delete(t.target))}))}),{root:n,rootMargin:s,threshold:\"number\"==typeof i?i:a[i]});return o.forEach((t=>l.observe(t))),()=>l.disconnect()}(e.current,(()=>(l(!0),o?void 0:()=>l(!1))),t)}),[n,e,s,o]),r}(u,{once:!0}),h=function(){const t=We($e);return ze(t.mount,[]),t}(),d=e().useRef(0),m=r?Math.abs(s).toLocaleString(l||\"en-US\"):String(Math.abs(s)),p=Array.from(m,Number).map(((t,e)=>isNaN(t)?m[e]:t)),[f,g]=e().useState(0),[y,v]=e().useState(0),x=e().useRef(null);return e().useEffect((()=>{var t;const e=null===(t=x.current.getClientRects())||void 0===t?void 0:t[0];e&&(g(e.height),v(e.width))}),[s,i]),e().useEffect((()=>{c&&h.start(\"visible\")}),[c,s]),e().createElement(\"span\",{ref:u},0!==f&&e().createElement(\"div\",{style:{display:\"flex\",flexDirection:\"row\",overflow:\"hidden\"},className:n},p.map(((t,n)=>\"string\"==typeof t?e().createElement(\"div\",{key:n,style:{...i,fontVariantNumeric:\"tabular-nums\"}},t):e().createElement(\"div\",{key:n,style:{height:f,width:y}},Ro.map((t=>e().createElement(ko.div,{style:{...i,fontVariantNumeric:\"tabular-nums\"},key:\"\"+d.current++,initial:\"hidden\",variants:{hidden:{y:0},visible:{y:f*p[n]*-1-20*f}},animate:h,transition:null==o?void 0:o(n)},t))))))),e().createElement(\"div\",{ref:x,style:{position:\"absolute\",top:-9999,...i}},0))},jo=e().memo(Lo,((t,e)=>t.animateToNumber===e.animateToNumber&&t.fontStyle===e.fontStyle&&t.includeComma===e.includeComma))})(),i})()}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-animated-numbers/dist/index.js\n"));

/***/ })

}]);